<?php

$servername = "database-1.crz4vavpmnv9.ap-southeast-2.rds.amazonaws.com";
$username = "root";
$password = "binhmatt2018";
$database_name = "message";
$conn = new mysqli($servername, $username, $password, $database_name);

$query = "DELETE FROM messages WHERE conversation_id = '4f8b3d44-fcf4-ef96-a361-1854efecd8d7'";
$result =  $conn->query($query);

$query1 = "DELETE FROM messages WHERE conversation_id = '225b68e8-7414-a9ff-bd62-faa7f3c98e20' AND message_content = 'This is test message from message 2'";
$result =  $conn->query($query1);
die;



$a = "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
T/HXXePfijHh0zKcnevlh7/85f8Asvpzv7iIAgA=";

echo gzdecode(base64_decode($a));


die;
$tmpfname = dirname(__FILE__).'/cookie.auspost.txt';

$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://digitalapi.auspost.com.au/cssoapi/v2/session');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_POSTFIELDS, '{"username":"accounts@pure-electric.com.au","password":"aPureandTrue2018*"}');
curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');
curl_setopt($ch, CURLOPT_COOKIEJAR, $tmpfname);
curl_setopt($ch, CURLOPT_COOKIEFILE, $tmpfname);
curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
curl_setopt($ch, CURLOPT_COOKIESESSION, TRUE);
$headers = array();
$headers[] = 'Connection: keep-alive';
$headers[] = 'Pragma: no-cache';
$headers[] = 'Cache-Control: no-cache';
$headers[] = 'Accept: application/json, text/plain, */*';
$headers[] = 'Origin: https://auspost.com.au';
$headers[] = 'Ap_app_id: MYPOST';
$headers[] = 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36';
$headers[] = 'Content-Type: application/json';
$headers[] = 'Sec-Fetch-Site: same-site';
$headers[] = 'Sec-Fetch-Mode: cors';
$headers[] = 'Referer: https://auspost.com.au/mypost-business/auth/';
$headers[] = 'Accept-Encoding: gzip, deflate, br';
$headers[] = 'Accept-Language: en-US,en;q=0.9';
curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
$result = curl_exec($ch);
curl_close($ch);



die;
$db = DBManagerFactory::getInstance();
$sql_group = "SELECT * FROM  aos_line_item_groups lig
        WHERE lig.parent_type = 'AOS_Quotes' AND lig.parent_id = '99eaa0f6-7bb9-a9de-e519-5efab4d333e5' AND lig.deleted = 0";
$ret = $db->query($sql_group);
while ($row = $db->fetchByAssoc($ret)) {
    var_dump($row);
}
die;

// ini_set("display_errors",1);
$servername = "database-1.crz4vavpmnv9.ap-southeast-2.rds.amazonaws.com";
$username = "root";
$password = "binhmatt2018";
$database_name = "message";
$message_folder = '/message/';
$conn = new mysqli($servername, $username, $password, $database_name);
$invoice_id ='d3fc579d-2684-4d79-da70-5ef3d1e28b22';
// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
} 
$quote_id = '';
$query_phone = "SELECT contacts.phone_mobile , accounts_cstm.mobile_phone_c FROM aos_invoices
INNER JOIN accounts_cstm ON aos_invoices.billing_account_id = accounts_cstm.id_c
INNER JOIN contacts ON aos_invoices.billing_contact_id = contacts.id
WHERE aos_invoices.id = '".$invoice_id."' AND aos_invoices.deleted = 0";
$query_phone = "SELECT contacts.phone_mobile,accounts_cstm.mobile_phone_c FROM aos_quotes
  INNER JOIN accounts_cstm ON aos_quotes.billing_account_id = accounts_cstm.id_c
  INNER JOIN contacts ON aos_quotes.billing_contact_id = contacts.id
  WHERE aos_quotes.id = '".$quote_id."' AND aos_quotes.deleted = 0";
$db = DBManagerFactory::getInstance();
$result =  $db->query($query_phone);

$where_phone = '';
if($result->num_rows > 0){
        $row = $result->fetch_array(MYSQLI_ASSOC);
       
        if($row['phone_mobile'] != '' && $row['mobile_phone_c'] == ''){
                $phone = preg_replace("/^0/", "+61", preg_replace('/\D/', '', str_replace(" ","",$row['phone_mobile'])));
                $where_phone = " AND accounts.phone = '".$phone."'";
        }else if($row['mobile_phone_c'] != '' && $row['phone_mobile'] == ''){
                $phone = preg_replace("/^0/", "+61", preg_replace('/\D/', '', str_replace(" ","",$row['mobile_phone_c'])));
                $where_phone = " AND accounts.phone = '".$phone."'";
        }else if($row['phone_mobile'] != '' && $row['mobile_phone_c'] != ''){
                $phone1 = preg_replace("/^0/", "+61", preg_replace('/\D/', '', str_replace(" ","",$row['phone_mobile'])));
                $phone2 = preg_replace("/^0/", "+61", preg_replace('/\D/', '', str_replace(" ","",$row['mobile_phone_c'])));
                $where_phone = " AND (accounts.phone = '".$phone1."' OR accounts.phone = '".$phone2."')";
        }else{
                die;
        }
}

$query = "SELECT messages.message_content as link_file FROM messages 
INNER JOIN conversations ON conversations.id  = messages.conversation_id 
INNER JOIN accounts ON conversations.to_user  = accounts.id 
WHERE messages.message_type = 'image'".$where_phone;
echo $query;
 $result =  $conn->query($query);
 $array_link_result = array();
                if($result->num_rows > 0){
                    var_dump($row);
                        $i = 0;
                        while($row = $result->fetch_array(MYSQLI_ASSOC)){
                        $array_link_result[$i]=$row['link_file'];
                        $i++;
                        }
                        $key = 0 ;
                }     

 var_dump($array_link_result);
 die();
custom_autosendgeoemail();
require_once('custom/include/SugarFields/Fields/Multiupload/simple_html_dom.php');
function custom_autosendgeoemail(){
    date_default_timezone_set('UTC');
    set_time_limit(0);
    ini_set('memory_limit', '-1');

    $db  = DBManagerFactory::getInstance();
    
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, 'https://cognito-idp.ap-southeast-2.amazonaws.com/');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, '{"AuthFlow":"USER_PASSWORD_AUTH","ClientId":"1r8f4rahaq3ehkastcicb70th4","AuthParameters":{"USERNAME":"accounts@pure-electric.com.au","PASSWORD":"gPureandTrue2019*"},"ClientMetadata":{}}');
    curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');
    $headers = array();
    $headers[] = 'Authority: cognito-idp.ap-southeast-2.amazonaws.com';
    $headers[] = 'Pragma: no-cache';
    $headers[] = 'Cache-Control: no-cache';
    $headers[] = 'Origin: https://geocreation.com.au';
    $headers[] = 'X-Amz-Target: AWSCognitoIdentityProviderService.InitiateAuth';
    $headers[] = 'X-Amz-User-Agent: aws-amplify/0.1.x js';
    $headers[] = 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36';
    $headers[] = 'Content-Type: application/x-amz-json-1.1';
    $headers[] = 'Accept: */*';
    $headers[] = 'Sec-Fetch-Site: cross-site';
    $headers[] = 'Sec-Fetch-Mode: cors';
    $headers[] = 'Referer: https://geocreation.com.au/';
    $headers[] = 'Accept-Encoding: gzip, deflate, br';
    $headers[] = 'Accept-Language: en-US,en;q=0.9';
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    $result = curl_exec($ch);
    $result_data = json_decode($result);
    $accesstoken =  $result_data->AuthenticationResult->AccessToken;
    $RefreshToken = $result_data->AuthenticationResult->RefreshToken;

    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, 'https://cognito-idp.ap-southeast-2.amazonaws.com/');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, '{"AccessToken":'.$accesstoken.'"}');
    curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');
    $headers = array();
    $headers[] = 'Authority: cognito-idp.ap-southeast-2.amazonaws.com';
    $headers[] = 'Pragma: no-cache';
    $headers[] = 'Cache-Control: no-cache';
    $headers[] = 'Origin: https://geocreation.com.au';
    $headers[] = 'X-Amz-Target: AWSCognitoIdentityProviderService.GetUser';
    $headers[] = 'X-Amz-User-Agent: aws-amplify/0.1.x js';
    $headers[] = 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36';
    $headers[] = 'Content-Type: application/x-amz-json-1.1';
    $headers[] = 'Accept: */*';
    $headers[] = 'Sec-Fetch-Site: cross-site';
    $headers[] = 'Sec-Fetch-Mode: cors';
    $headers[] = 'Referer: https://geocreation.com.au/';
    $headers[] = 'Accept-Encoding: gzip, deflate, br';
    $headers[] = 'Accept-Language: en-US,en;q=0.9';
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    $result = curl_exec($ch);
    curl_close($ch);


    $param = array (
        'ClientId' => '1r8f4rahaq3ehkastcicb70th4',
        'AuthFlow' => 'REFRESH_TOKEN_AUTH',
        'AuthParameters' => 
        array (
        'REFRESH_TOKEN' => $RefreshToken,
        'DEVICE_KEY' => NULL,
        ),
    );

    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, 'https://cognito-idp.ap-southeast-2.amazonaws.com/');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($param));
    curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');
    $headers = array();
    $headers[] = 'Authority: cognito-idp.ap-southeast-2.amazonaws.com';
    $headers[] = 'Pragma: no-cache';
    $headers[] = 'Cache-Control: no-cache';
    $headers[] = 'Origin: https://geocreation.com.au';
    $headers[] = 'X-Amz-Target: AWSCognitoIdentityProviderService.InitiateAuth';
    $headers[] = 'X-Amz-User-Agent: aws-amplify/0.1.x js';
    $headers[] = 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36';
    $headers[] = 'Content-Type: application/x-amz-json-1.1';
    $headers[] = 'Accept: */*';
    $headers[] = 'Sec-Fetch-Site: cross-site';
    $headers[] = 'Sec-Fetch-Mode: cors';
    $headers[] = 'Referer: https://geocreation.com.au/';
    $headers[] = 'Accept-Encoding: gzip, deflate, br';
    $headers[] = 'Accept-Language: en-US,en;q=0.9';
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    $result = curl_exec($ch);
    curl_close($ch);

    $IdToken =  $result_data->AuthenticationResult->IdToken;

    $curl = curl_init();
    $url = 'https://api.geocreation.com.au/api/assignments/search?filters%5BhasIssuedAgreements%5D=true&page=1';
    curl_setopt($curl, CURLOPT_URL, $url);
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
    curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 0);
    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);

    curl_setopt($curl, CURLOPT_HEADER, false);
    curl_setopt($curl, CURLOPT_HTTPGET, true);
    curl_setopt($curl, CURLOPT_COOKIESESSION, true);

    curl_setopt($curl, CURLOPT_USERAGENT,  $_SERVER['HTTP_USER_AGENT']);
    curl_setopt($curl, CURLOPT_HTTPHEADER, array(
            "Host: api.geocreation.com.au",
            "User-Agent: ". $_SERVER['HTTP_USER_AGENT'],
            "Content-type: application/json; charset=UTF-8",
            "Accept: */*",
            "Accept-Language: en-US,en;q=0.5",
            "Accept-Encoding:   gzip, deflate, br",
            "Connection: keep-alive",
            "Authorization: token ".$IdToken,
            "Referer: https://geocreation.com.au/assignments/?filters%5BhasIssuedAgreements%5D=true",
            "Origin: https://geocreation.com.au",
        )
    );

    $result = curl_exec($curl);
    curl_close($curl);
    if($result != false){
        $result = json_decode($result);
        $issue_id_arr = array();
        $email_type = array();

        //thienpb fix logic for sh
        if(isset($result->assignment)){
            foreach($result->assignment as $ret){
                array_push( $issue_id_arr,$ret->reference);
            }
            if(count($issue_id_arr) >0){
                foreach ($issue_id_arr as $issue_id){
                    if(strpos($issue_id,'SH') !== false){
                        
                        // Get JSON of assignment by assignment ID
                        $curl = curl_init();
                        $url = 'https://api.geocreation.com.au/api/assignments/'.$issue_id;
                        curl_setopt($curl, CURLOPT_URL, $url);
                        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
                        curl_setopt($curl, CURLOPT_CUSTOMREQUEST, "GET");

                        curl_setopt($curl, CURLOPT_ENCODING, 'gzip, deflate');
                        curl_setopt($curl, CURLOPT_USERAGENT,  $_SERVER['HTTP_USER_AGENT']);
                        curl_setopt($curl, CURLOPT_HTTPHEADER, array(
                                "Host: api.geocreation.com.au",
                                "User-Agent: ". $_SERVER['HTTP_USER_AGENT'],
                                "Content-type: application/json; charset=UTF-8",
                                "Accept: */*",
                                "Accept-Language: en-US,en;q=0.5",
                                "Accept-Encoding:   gzip, deflate, br",
                                "Connection: keep-alive",
                                "Authorization: token ".$$IdToken,
                                "Referer: https://geocreation.com.au/assignments/$issue_id/edit",
                                "Origin: https://geocreation.com.au",
                            )
                        );
                        $result = curl_exec($curl);
                        curl_close ($curl);

                        $result = json_decode($result);
                        $assignment_byID = $result->assignment->result;
                        
                        if(count($assignment_byID->agreements) > 1){
                            if($assignment_byID->agreements[0]->templateName == "System Owner" ){
                                if($assignment_byID->agreements[1]->status == 'accepted'){
                                    //mail cho owner
                                    $email_type[$issue_id] = 'owner';
                                    continue;
                                }else{
                                    //mail cho installer
                                    $email_type[$issue_id] = 'installer';
                                    continue;
                                }
                            }else{
                                if($assignment_byID->agreements[0]->status == 'accepted'){
                                    //mail cho owner
                                    $email_type[$issue_id] = 'owner';
                                    continue;
                                }else{
                                    $email_type[$issue_id] = 'installer';
                                    //mail cho installer
                                    continue;
                                }
                            }
                        }else{
                            $email_type[$issue_id] = 'owner';
                            // mail cho owner
                            continue;
                        }
                    }else{
                        $email_type[$issue_id] = 'owner';
                    // mail cho owner
                    }
                }

                //code send email

                //code send email
                $query = "SELECT aos_invoices.id,aos_invoices_cstm.stc_aggregator_serial_c,aos_invoices_cstm.geo_email_sent_date_c,aos_invoices_cstm.send_geo_email_status_c FROM aos_invoices INNER JOIN aos_invoices_cstm ON aos_invoices.id = aos_invoices_cstm.id_c
                                                WHERE aos_invoices_cstm.stc_aggregator_serial_c IN ('". implode("','",$issue_id_arr) . "')  
                                                AND  aos_invoices.deleted = 0";
                $db  = DBManagerFactory::getInstance();

                $ret = $db->query($query);
                if($ret->num_rows >0 ){
                    while($row = $db->fetchByAssoc($ret)){
                        if($email_type[$row['stc_aggregator_serial_c']] == 'owner'){
                            if($row['send_geo_email_status_c'] == 'pending'){
                                //send email for owner
                                config_sendGeoEmail($row['id'],'owner');
                            }elseif($row['send_geo_email_status_c'] == 'sent'){
                                if(is_null($row['send_geo_email_status_c']) || $row['send_geo_email_status_c'] == ''){
                                    continue;
                                }
                                if((time() - strtotime($row['geo_email_sent_date_c']))/60/60 >= 24){
                                    config_sendGeoEmail($row['id'],'owner');
                                }
                            }
                            
                        }else{
                            //send email for installer
                            config_sendGeoEmail($row['id'],'installer');
                        }
                    }
                }
                die();
            }
        }
    }
}

function customReplaceEmailVariables(Email $email, $request)
{

    /**
     * @var EmailTemplate $emailTemplate
     */
    $emailTemplate = BeanFactory::getBean(
        'EmailTemplates',
        isset($request['emails_email_templates_idb']) ?
            $request['emails_email_templates_idb'] :
            null
    );
    //thienpb fix here
    $emailTemplate->subject = str_replace("STCs/VEECs",$request['geo_name'],$emailTemplate->subject);
    $emailTemplate->subject = str_replace("\$productType",$request['productType'],$emailTemplate->subject);
    $emailTemplate->subject = str_replace("\$aos_invoices_name",$request['aos_invoices_name'],$emailTemplate->subject);

    $emailTemplate->body = str_replace("STCs/VEECs",$request['geo_name'],$emailTemplate->body);
    $emailTemplate->body_html = str_replace("STCs/VEECs",$request['geo_name'],$emailTemplate->body_html);

    $email->name = $emailTemplate->subject;
    $email->description_html = $emailTemplate->body_html;
    $email->description = $emailTemplate->body;

   
    
    $email->description_html = str_replace("\$lead_first_name", $request['lead_first_name'] , $email->description_html);
    $email->description_html = str_replace("\$productType", $request['productType'] , $email->description_html);

    $email->description = strip_tags($email->description_html);

    return $email;
}

function config_sendGeoEmail($invoice_id,$email_type){

    $account_id = '';
    $product_type = '';
    $from_address = '';
    $db  = DBManagerFactory::getInstance();


    $invoice = new AOS_Invoices();
    $invoice->retrieve($invoice_id);

    if(!isset($invoice->id) || $invoice->id == "") {
        die();
    }


    $from_address = "PureElectric Accounts - PureElectric &lt;accounts@pure-electric.com.au&gt;";

    $account = new Account();
    if($account_id == "") {
        $account_id = $invoice->billing_account_id;
    }
    $account = $account->retrieve($account_id);

    //thienpb get product name and compare

    $sql = "SELECT aos_products_quotes.name FROM aos_products_quotes WHERE parent_type = 'AOS_Invoices' AND parent_id = '".$invoice->id."' AND deleted = 0";
    $result = $db->query($sql);

    $isSTC = false;
    $isVEEC = false;
    $geo_name = '';
    while($row = $db->fetchByAssoc($result)){
        if(strpos($row['name'],'STC') !== false){
            $isSTC = true;
        }
        if(strpos($row['name'],'VEEC') !== false){
            $isVEEC = true;
        }
    }

    if($isSTC == true && $isVEEC == true){
        $geo_name = "STCs/VEECs";
    }else if($isSTC){
        $geo_name = "STCs";
    }else if($isVEEC){
        $geo_name = "VEECs";
    }else{
        $geo_name ='';
    }
    //end
    $sea = new SugarEmailAddress; 
    // Grab the primary address for the given record represented by the $bean object
    $primary = $sea->getPrimaryAddress($account);

    //thien fix
    $query_groupname = "SELECT aos_line_item_groups.name FROM aos_line_item_groups WHERE parent_id = '".$invoice_id."' AND deleted = 0 LIMIT 1";
    $ret_groupname = $db->query($query_groupname);
    if($ret_groupname->num_rows >0){
        $row_groupname = $db->fetchByAssoc($ret_groupname);
        $productType = strtolower($row_groupname['name']);
        
        if(strpos($productType,'sanden') !== false){
            $product_type = 'Sanden';
        }else if(strpos($productType,'daikin') !==false){
            $product_type = 'Daikin';
        }else{
            $product_type = '';
        }
    }
    $temp_request = array(
        "module" => "Emails",
        "action" => "send",
        "record" => "",
        "type" => "out",
        "send" => 1,
        "inbound_email_id" => ($invoice->assigned_user_id == "8d159972-b7ea-8cf9-c9d2-56958d05485e") ? "8dab4c79-32d8-0a26-f471-59f1c4e037cf" : "58cceed9-3dd3-d0b5-43b2-59f1c80e3869",
        "emails_email_templates_name" => "CLIENT GEO STCs/VEECs Contractor Email Follow Up",
        "emails_email_templates_idb" => "acd0d03e-e494-d298-79ce-5a057236fb84",
        "parent_type" => "Accounts",
        "parent_name" => $account->name,
        "parent_id" => $account->id,
        "from_addr" => $from_address,
        "to_addrs_names" => $account->name . "  <".$primary.">",//"binhdigipro@gmail.com",//$lead->email1,
        "cc_addrs_names" => "info@pure-electric.com.au",
        "bcc_addrs_names" => "binh.nguyen@pure-electric.com.au, paul.szuster@pure-electric.com.au, matthew.wright@pure-electric.com.au",
        "is_only_plain_text" => false,
        "aos_invoices_name" => $invoice->name,
        "lead_first_name"=> current(explode(' ',$account->name)),
        "geo_name" => $geo_name,
        "productType" => $product_type,
        
    );
    $emailBean = new Email();
    $emailBean = $emailBean->populateBeanFromRequest($emailBean, $temp_request);
    $inboundEmailAccount = new InboundEmail();
    $inboundEmailAccount->retrieve($temp_request['inbound_email_id']);
    
    $emailBean->mailbox_id = "b4fc56e6-6985-f126-af5f-5aa8c594e7fd";// Account email;

    // parse and replace bean variables
    $emailBean = customReplaceEmailVariables($emailBean, $temp_request);
    // Signature
    $matthew_id = "8d159972-b7ea-8cf9-c9d2-56958d05485e";
    $paul_id = "61e04d4b-86ef-00f2-c669-579eb1bb58fa";
    
    if($invoice->assigned_user_id != ''){
        $current_user = new User();
        $invoice->retrieve($invoice->assigned_user_id);
        
    }else{
        $current_user->sms_signature_c = '';
    }

    $smsTemplateID = '5fcde64f-63ac-dc94-21fb-5e5ef5cf4c70';
    $smsTemplate = BeanFactory::getBean(
        'pe_smstemplate',
        $smsTemplateID
    );
    
    $contact = new Contact();
    $contact_id = $invoice->billing_contact_id; 
    $contact = $contact->retrieve($contact_id);
    $sms_body =  $smsTemplate->body_c;
    $sms_body = str_replace("\$first_name", $contact->first_name, $sms_body);
    $phone_number = preg_replace("/^0/", "+61", preg_replace('/\D/', '', $contact->phone_mobile));
    $phone_number = preg_replace("/^61/", "+61", $phone_number);
    $emailBean->number_client = $phone_number;
    $emailBean->sms_message = strip_tags(trim(html_entity_decode($sms_body.$current_user->sms_signature_c,ENT_QUOTES)));

    $emailBean->save();
    $description_html_save = $emailBean->description_html;
    $email_edit_link = "<a href='https://suitecrm.pure-electric.com.au/index.php?action=ComposeViewWithPdfTemplate&module=Emails&return_module=AOS_Invoices&return_action=DetailView&return_action=DetailView&record=".$emailBean->id.'&email_template_id=acd0d03e-e494-d298-79ce-5a057236fb84'.'&sms_template_id='.$smsTemplateID."'>Edit Email Link</a><br/>";
    $GEO_link = "<a href='https://geocreation.com.au/assignments/".$invoice->stc_aggregator_serial_c."/edit'>GEO Link</a><br/>";
    $emailBean->description_html = $email_edit_link.$GEO_link.$emailBean->description_html;
    //VUT - Subject email GEO "PureElectric Geo Admin STCs/VEECs Client Approval - contact_fullname + city + state + geo number"
        if ($isSTC == true && $isVEEC == false) {
            $contact = new Contact();
            $contact_id = $invoice->billing_contact_id; 
            $contact = $contact->retrieve($contact_id);
            $emailBean->name = $emailBean->name.' - '.$contact->first_name.' '.$contact->last_name.' '.$contact->primary_address_city.' '.$contact->primary_address_state.' '.$invoice->stc_aggregator_serial_c; 
        }    
    //VUT-end
    $emailToSend = clone $emailBean;
    $emailToSend->mailbox_id = "e139bac0-4242-ae27-3a90-5bcd22e4e968";
    $emailToSend->to_addrs_arr = array(array("email"=>"nguyenphudung93.dn@gmail.com"));

    if ( $emailToSend->send()) {
        $emailBean->status = 'sent';
        $emailBean->description_html = preg_replace("/<a href=[^>]+Edit Email Link</a><br/>", "", $emailBean->description_html);
         // $emailBean->description_html = preg_replace("/&lt;div dir="ltr">PureElectric Accounts class="CToWUd"></a></div></div></div>/", "", $emailBean->description_html);
        $emailBean->to_addrs = $account->name . "  <".$primary.">";
        $emailBean->description_html =$description_html_save;
        $emailBean->save();

        if($email_type == 'owner'){
            $invoice->send_geo_email_status_c = 'sent';
            $dateAUS = date('Y-m-d H:i:s', time());
            $invoice->geo_email_sent_date_c = $dateAUS;
            $invoice->save();
        }
    }
}
die;
$db = DBManagerFactory::getInstance();
$email = 'sophia.samuel@yahoo.com.au';
$sql = "SELECT ear.bean_id AS id , bean_module AS module FROM email_addresses ea
        RIGHT JOIN email_addr_bean_rel ear ON ear.email_address_id = ea.id
        WHERE 1=1 
        AND ea.deleted  != 1 AND ear.deleted != 1
        AND LOWER(replace(ea.email_address, '.', '')) LIKE LOWER(replace('".$email."', '.', ''))";

$ret = $db->query($sql);

while ($row = $db->fetchByAssoc($ret)) {
    $lookup_result[] = $row;
}
if(count($lookup_result)){

    
    $db = DBManagerFactory::getInstance();
    $quotes = array();
    $invoices = array();
    foreach($lookup_result as $res){
        $crm_links .= '<a class="link-button buttons" href="https://suitecrm.pure-electric.com.au/index.php?module='.$res['module'].'&action=EditView&record='.$res['id'] .'">'.$res['module']."</a>";
        if($res['module'] == "Leads"){
            $lead = new Lead();
            $lead->retrieve($res['id']);

            if(isset($lead->email1) && $lead->email1!= ""){
                //<a target="_blank" href="https://mail.google.com/#search/fraserwikner%40hotmail.com">GM Search</a>
                $crm_links .= '<a class="link-button buttons" href="https://mail.google.com/#search/'.$lead->email1.'"> GM Search</a>';
                $crm_links .= '<a class="link-button buttons" href="http://message.pure-electric.com.au/#'.  preg_replace("/^0/", "61", preg_replace('/\D/', '', $lead->phone_work)).'">SMS Link</a>';
            }
            $bean_quote = new AOS_Quotes();
            $bean_quote->retrieve( $lead->create_solar_quote_num_c);
            if($bean_quote->id != '') {
                $number_lead = $bean_quote->solargain_lead_number_c;
                if(isset($bean_quote->solargain_lead_number_c) && $bean_quote->solargain_lead_number_c!= ""){
                    $crm_links .= '<a class="link-button buttons" href="https://crm.solargain.com.au/lead/edit/'.$bean_quote->solargain_lead_number_c.'">SG Lead</a>';
                }
                if(isset($bean_quote->solargain_quote_number_c) && $bean_quote->solargain_quote_number_c!= ""){
                    $crm_links .= '<a class="link-button buttons" href="https://crm.solargain.com.au/quote/edit/'.$bean_quote->solargain_quote_number_c.'">SG Quote</a>';
                }
                if(isset($bean_quote->solargain_tesla_quote_number_c) && $bean_quote->solargain_tesla_quote_number_c!= ""){
                    $crm_links .= '<a class="link-button buttons" href="https://crm.solargain.com.au/quote/edit/'.$bean_quote->solargain_tesla_quote_number_c.'">SG Quote</a>';
                }
            } 


            //quote Suitecrm solar tesla 
            $bean_quote = new AOS_Quotes();
            $bean_quote->retrieve( $lead->create_tesla_quote_num_c);
            if($bean_quote->id != '') {
                $number_lead = $bean_quote->solargain_lead_number_c;
                if(isset($bean_quote->solargain_lead_number_c) && $bean_quote->solargain_lead_number_c!= ""){
                    $crm_links .= '<a class="link-button buttons" href="https://crm.solargain.com.au/lead/edit/'.$bean_quote->solargain_lead_number_c.'">SG Lead</a>';
                }
                if(isset($bean_quote->solargain_quote_number_c) && $bean_quote->solargain_quote_number_c!= ""){
                    $crm_links .= '<a class="link-button buttons" href="https://crm.solargain.com.au/quote/edit/'.$bean_quote->solargain_quote_number_c.'">SG Quote</a>';
                }
                if(isset($bean_quote->solargain_tesla_quote_number_c) && $bean_quote->solargain_tesla_quote_number_c!= ""){
                    $crm_links .= '<a class="link-button buttons" href="https://crm.solargain.com.au/quote/edit/'.$bean_quote->solargain_tesla_quote_number_c.'">SG Quote</a>';
                }
                } 

            if(isset($lead->phone_work) && $lead->phone_work != ""){
                $crm_links .= '<a class="link-button buttons" href="http://message.pure-electric.com.au/#'.preg_replace("/^0/", "61", preg_replace('/\D/', '', $lead->phone_work)).'">P.Work('.preg_replace("/^0/", "61", preg_replace('/\D/', '', $lead->phone_work)).')</a>';
            } else if(isset($lead->phone_mobile) && $lead->phone_mobile != ""){
                $crm_links .= '<a class="link-button buttons" href="http://message.pure-electric.com.au/#'.preg_replace("/^0/", "61", preg_replace('/\D/', '', $lead->phone_mobile)).'">P.Mobile('.preg_replace("/^0/", "61", preg_replace('/\D/', '', $lead->phone_mobile)).')</a>';
            }           
            /*if(isset($lead->primary_address_postalcode) && $lead->primary_address_postalcode != ""){
                    $crm_links .= " ".$lead->primary_address_street. " ".
                                            $lead->primary_address_city. " ".
                                            $lead->primary_address_state. " ".
                                            $lead->primary_address_postalcode .PHP_EOL;
            }*/

            if(isset($lead->id) && $lead->id != ""){
                    $crm_links .= '<a class="link-button buttons" href="https://suitecrm.pure-electric.com.au/index.php?entryPoint=customCreateAcceptanceLink&lead_id='.$lead->id.'">Acceptance Email</a>';
                    //thienpb code - add link forward acceptance email to sg sam Forward Acceptance Email
                    $crm_links .= '<a class="link-button buttons" href="https://suitecrm.pure-electric.com.au/index.php?entryPoint=customCreateForwardAcceptanceLink&lead_id='.$lead->id.'">Forward Acceptance Email</a>';
            }
            //primary_address_city
        }
        if($res['module'] == 'Accounts'){            
            $sql = "SELECT id FROM aos_quotes WHERE billing_account_id='".$res['id']."'";
            $ret = $db->query($sql);
            if($ret->num_rows >0){
                while($row = $db->fetchByAssoc($ret)){
                    if(!in_array($row,$quotes)){
                        $quotes[] = $row;
                    }
                }
            }
            $sql = "SELECT id FROM aos_invoices WHERE billing_account_id='".$res['id']."'";
            $ret = $db->query($sql);
            if($ret->num_rows >0){
                while($row = $db->fetchByAssoc($ret)){
                    if(!in_array($row,$invoices)){
                        $invoices[] = $row;
                    }
                }
            }
        }
        if($res['module'] == "Contacts"){
            $sql = "SELECT id FROM aos_quotes WHERE billing_contact_id = '".$res['id']."'";
            $ret = $db->query($sql);
            if($ret->num_rows >0){
                while($row = $db->fetchByAssoc($ret)){
                    if(!in_array($row,$quotes)){
                        $quotes[] = $row;
                    }
                }
            }
            $sql = "SELECT id FROM aos_invoices WHERE billing_contact_id = '".$res['id']."'";
            $ret = $db->query($sql);
            if($ret->num_rows >0){
                while($row = $db->fetchByAssoc($ret)){
                    if(!in_array($row,$invoices)){
                        $invoices[] = $row;
                    }
                }
            }
        }
        if($res['module'] == "PO_purchase_order"){
            $sql = "SELECT id FROM aos_invoices WHERE billing_contact_id = '".$res['id']."'";
            $ret = $db->query($sql);
            if($ret->num_rows >0){
                while($row = $db->fetchByAssoc($ret)){
                    if(!in_array($row,$invoices)){
                        $PO_invoices[] = $row;
                    }
                }
            }
        }
    }
    if(count($PO_invoices) >0){
        $group_name ='';
        foreach ($PO_invoices as $res_po_inv){
            $invoice_po = new AOS_Invoices();
            $invoice_po->retrieve($res_po_inv['id']);
            if(isset($invoice_po->id) && $invoice_po->id != "")
                $crm_links .= 
                    '<a class="link-button buttons" href="https://suitecrm.pure-electric.com.au/index.php?module=AOS_Invoices&action=EditView&record='.$invoice_po->id.'">Invoices</a>';
                $crm_links .= 
                    '<a class="link-button buttons" href="https://suitecrm.pure-electric.com.au/index.php?module=PO_purchase_order&action=EditView&record='.$invoice_po->plumber_po_c.'">Link PO</a>';
        }
    }
    if(count($quotes) >0){
        $group_name ='';
        foreach ($quotes as $res_qt){
            $quote = new AOS_Quotes();
            $quote->retrieve($res_qt['id']);
            $sql = "SELECT name FROM aos_line_item_groups WHERE parent_id = '".$quote->id."' AND parent_type = 'AOS_Quotes'" ;
            $ret = $db->query($sql);
            $row = $db->fetchByAssoc($ret);
            if(strpos(strtolower($row['name']),'daikin') !== false){
                $group_name = ' DAIKIN';
            }else if(strpos(strtolower($row['name']),'sanden') !== false){
                $group_name = ' SANDEN';
            }else if(strpos(strtolower( $quote->quote_type_c),'solar') !== false){
                $group_name =' SOLAR';
            }

            $crm_links .= /*'PEQ '.$quote->number.$group_name.":*/ 
                '<a class="link-button buttons" href="https://suitecrm.pure-electric.com.au/index.php?module=AOS_Quotes&action=EditView&record='.$quote->id.'">PEQ '.$quote->number.$group_name.'</a>';

        }
    }
    if(count($invoices) >0){
        $group_name ='';
        foreach ($invoices as $res_inv){
            $invoice_new = new AOS_Invoices();
            $invoice_new->retrieve($res_inv['id']);
            if(isset($invoice_new->id) && $invoice_new->id != "")
            $sql = "SELECT name FROM aos_line_item_groups WHERE parent_id = '".$invoice_new->id."' AND parent_type = 'AOS_Invoices'" ;
            $ret = $db->query($sql);
            $row = $db->fetchByAssoc($ret);
            if(strpos(strtolower($row['name']),'daikin') !== false){
                $group_name = ' DAIKIN';
            }else if(strpos(strtolower($row['name']),'sanden') !== false){
                $group_name = ' SANDEN';
            }else if(strpos(strtolower( $quote->quote_type_c),'solar') !== false){
                $group_name =' SOLAR';
            }

            $crm_links .= /*'PEINV '.$invoice_new->number.": */
                '<a class="link-button buttons" href="https://suitecrm.pure-electric.com.au/index.php?module=AOS_Invoices&action=EditView&record='.$invoice_new->id.'">PEINV '.$invoice_new->number.$group_name.'</a>';
        }
    }
}

echo $crm_links;
die();

//update profit
$db = DBManagerFactory::getInstance();
$query = 'SELECT aos_invoices.id as id from aos_invoices 
INNER JOIN aos_invoices_cstm ON aos_invoices.id = aos_invoices_cstm.id_c
WHERE aos_invoices.deleted=0 AND aos_invoices_cstm.quote_type_c ="quote_type_sanden" AND aos_invoices.status="Paid"';
$result = $db->query($query);
if($result->num_rows > 0){
    while($row =  $db->fetchByAssoc($result)){
        $InvoiceID = $row['id'];
        $Invoice = new AOS_Invoices();
        $Invoice->retrieve($InvoiceID);
        if($Invoice->id != ''){
            $subtotal_invoice = get_subtotal_amount($Invoice);

            $Plumber_PO = new PO_purchase_order();
            $Plumber_PO->retrieve(trim($Invoice->plumber_po_c));
            $subtotal_plumber_po = get_subtotal_amount($Plumber_PO);
            
            $Electric_PO = new PO_purchase_order();
            $Electric_PO->retrieve(trim($Invoice->electrical_po_c));
            $subtotal_electrical_po = get_subtotal_amount($Electric_PO);
            
            $subtotal_stc = 0;
            if($Invoice->stc_aggregator_serial_c != ''){
                $subtotal_stc = get_subtotal_STC($Invoice->stc_aggregator_serial_c);
            }
            
            $group_po = $Invoice->get_linked_beans('aos_invoices_po_purchase_order_1','PO_purchase_order');
            $array_po_plum_and_elec = [$Invoice->electrical_po_c,$Invoice->plumber_po_c];
            $Sanden_PO = null;
            if(count($group_po)> 0){
                for($i=0;$i < count($group_po);$i++){
                    if(!in_array($group_po[$i],$array_po_plum_and_elec)){
                        $Sanden_PO = $group_po[$i];
                        break;
                    }
                }
            }
            if( $Sanden_PO == null){
                $subtotal_sanden_po = 0;
            }else{
                $subtotal_sanden_po = get_subtotal_amount($Sanden_PO);
            }
       
            $subtotal_total_cost = $subtotal_plumber_po + $subtotal_electrical_po + $subtotal_sanden_po;
            $subtotal_total_revenue = $subtotal_invoice + $subtotal_stc;
            $profit = $subtotal_total_revenue - $subtotal_total_cost;
            
            if($subtotal_total_cost != 0 ){
                $gp = number_format($profit/$subtotal_total_cost * 100, 1) ;
            }else {
                $gp= 0;
            }
            $Invoice->total_revenue_c =  number_format($subtotal_total_revenue,2);
            $Invoice->total_cost_c =  number_format($subtotal_total_cost,2);
            $Invoice->gross_profit_c =  number_format($profit,2);
            $Invoice->gross_profit_percent_c =  $gp .'%';
            //old field 
            $Invoice->profit_c =  number_format($profit,2);
            $Invoice->gp_c =  $gp .'%';
            $Invoice->subtotal_c =  number_format($subtotal_total_revenue,2);
            $Invoice->save();
            echo $InvoiceID .'<br>';
        }

    }
}

function get_subtotal_STC($assignment){
    date_default_timezone_set('Africa/Lagos');
    set_time_limit(0);
    ini_set('memory_limit', '-1');
    $subtotal_stc = 0;
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, 'https://cognito-idp.ap-southeast-2.amazonaws.com/');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, '{"AuthFlow":"USER_PASSWORD_AUTH","ClientId":"1r8f4rahaq3ehkastcicb70th4","AuthParameters":{"USERNAME":"accounts@pure-electric.com.au","PASSWORD":"gPureandTrue2019*"},"ClientMetadata":{}}');
    curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');
    $headers = array();
    $headers[] = 'Authority: cognito-idp.ap-southeast-2.amazonaws.com';
    $headers[] = 'Pragma: no-cache';
    $headers[] = 'Cache-Control: no-cache';
    $headers[] = 'Origin: https://geocreation.com.au';
    $headers[] = 'X-Amz-Target: AWSCognitoIdentityProviderService.InitiateAuth';
    $headers[] = 'X-Amz-User-Agent: aws-amplify/0.1.x js';
    $headers[] = 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36';
    $headers[] = 'Content-Type: application/x-amz-json-1.1';
    $headers[] = 'Accept: */*';
    $headers[] = 'Sec-Fetch-Site: cross-site';
    $headers[] = 'Sec-Fetch-Mode: cors';
    $headers[] = 'Referer: https://geocreation.com.au/';
    $headers[] = 'Accept-Encoding: gzip, deflate, br';
    $headers[] = 'Accept-Language: en-US,en;q=0.9';
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    $result = curl_exec($ch);
    $result_data = json_decode($result);
    $accesstoken =  $result_data->AuthenticationResult->AccessToken;
    $RefreshToken = $result_data->AuthenticationResult->RefreshToken;

    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, 'https://cognito-idp.ap-southeast-2.amazonaws.com/');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, '{"AccessToken":'.$accesstoken.'"}');
    curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');
    $headers = array();
    $headers[] = 'Authority: cognito-idp.ap-southeast-2.amazonaws.com';
    $headers[] = 'Pragma: no-cache';
    $headers[] = 'Cache-Control: no-cache';
    $headers[] = 'Origin: https://geocreation.com.au';
    $headers[] = 'X-Amz-Target: AWSCognitoIdentityProviderService.GetUser';
    $headers[] = 'X-Amz-User-Agent: aws-amplify/0.1.x js';
    $headers[] = 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36';
    $headers[] = 'Content-Type: application/x-amz-json-1.1';
    $headers[] = 'Accept: */*';
    $headers[] = 'Sec-Fetch-Site: cross-site';
    $headers[] = 'Sec-Fetch-Mode: cors';
    $headers[] = 'Referer: https://geocreation.com.au/';
    $headers[] = 'Accept-Encoding: gzip, deflate, br';
    $headers[] = 'Accept-Language: en-US,en;q=0.9';
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    $result = curl_exec($ch);
    curl_close($ch);

    $param = array (
        'ClientId' => '1r8f4rahaq3ehkastcicb70th4',
        'AuthFlow' => 'REFRESH_TOKEN_AUTH',
        'AuthParameters' => 
        array (
        'REFRESH_TOKEN' => $RefreshToken,
        'DEVICE_KEY' => NULL,
        ),
    );

    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, 'https://cognito-idp.ap-southeast-2.amazonaws.com/');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($param));
    curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');
    $headers = array();
    $headers[] = 'Authority: cognito-idp.ap-southeast-2.amazonaws.com';
    $headers[] = 'Pragma: no-cache';
    $headers[] = 'Cache-Control: no-cache';
    $headers[] = 'Origin: https://geocreation.com.au';
    $headers[] = 'X-Amz-Target: AWSCognitoIdentityProviderService.InitiateAuth';
    $headers[] = 'X-Amz-User-Agent: aws-amplify/0.1.x js';
    $headers[] = 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36';
    $headers[] = 'Content-Type: application/x-amz-json-1.1';
    $headers[] = 'Accept: */*';
    $headers[] = 'Sec-Fetch-Site: cross-site';
    $headers[] = 'Sec-Fetch-Mode: cors';
    $headers[] = 'Referer: https://geocreation.com.au/';
    $headers[] = 'Accept-Encoding: gzip, deflate, br';
    $headers[] = 'Accept-Language: en-US,en;q=0.9';
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    $result = curl_exec($ch);
    curl_close($ch);

    $IdToken =  $result_data->AuthenticationResult->IdToken;

    
    // Get JSON of assignment by assignment ID
    $curl = curl_init();
    $url = 'https://api.geocreation.com.au/api/assignments/'.$assignment;
    curl_setopt($curl, CURLOPT_URL, $url);
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($curl, CURLOPT_CUSTOMREQUEST, "GET");

    curl_setopt($curl, CURLOPT_ENCODING, 'gzip, deflate');
    curl_setopt($curl, CURLOPT_USERAGENT,  $_SERVER['HTTP_USER_AGENT']);
    curl_setopt($curl, CURLOPT_HTTPHEADER, array(
            "Host: api.geocreation.com.au",
            "User-Agent: ". $_SERVER['HTTP_USER_AGENT'],
            "Content-type: application/json; charset=UTF-8",
            "Accept: */*",
            "Accept-Language: en-US,en;q=0.5",
            "Accept-Encoding:   gzip, deflate, br",
            "Connection: keep-alive",
            "Authorization: token ".$IdToken,
            "Referer: https://geocreation.com.au/assignments/$assignment/edit",
            "Origin: https://geocreation.com.au",
        )
    );

    $result = curl_exec($curl);
    curl_close ($curl);

    if($result != false){
        $result = json_decode($result);
        $assignment_byID = $result->assignment->result;
        $address = $assignment_byID->commonSection->activityAddress->displayAddress;
        $activityDate = $assignment_byID->commonSection->activityDate;
        $subtotal_stc = $result->assignment->result->totalValue;
    }

    return $subtotal_stc;
}

function get_subtotal_amount($bean){
    $subtotal_amount = $bean->subtotal_amount;
    if($subtotal_amount == '') {
        $subtotal_amount = 0;
    } else{
        $subtotal_amount = substr($subtotal_amount,0,-4);
    } 
    return  $subtotal_amount;
}
die();
/**Update field number in Call */
$db = DBManagerFactory::getInstance();
$sql_set_count = "SET @count = 0;";
$result = $db->query($sql_set_count);
$sql_number = "UPDATE calls SET number = @count:=@count+1 ORDER BY date_entered ASC";
$result = $db->query($sql_number);

die();

$db = DBManagerFactory::getInstance();
$query = 'SELECT * from aos_quotes INNER JOIN aos_quotes_cstm ON aos_quotes.id = aos_quotes_cstm.id_c WHERE aos_quotes.date_entered > DATE_SUB(now(), INTERVAL 2 MONTH) AND (aos_quotes_cstm.pre_install_photos_c IS NULL or aos_quotes_cstm.pre_install_photos_c = "") AND aos_quotes.deleted = 0 ORDER BY aos_quotes.date_entered DESC';
$result = $db->query($query);
if($result->num_rows > 0){
    while($row =  $db->fetchByAssoc($result)){
        $uuid = md5(uniqid(mt_rand(), true));
        $guid =  substr($uuid,0,8)."-".
                substr($uuid,8,4)."-".
                substr($uuid,12,4)."-".
                substr($uuid,16,4)."-".
                substr($uuid,20,12);
        $query_update = 'UPDATE  aos_quotes_cstm set pre_install_photos_c = "'.$guid.'" WHERE id_c = "'.$row['id'].'"' ;
        $db->query($query_update);
        break;
    }
}

$db = DBManagerFactory::getInstance();
$query = 'SELECT * from leads INNER JOIN leads_cstm ON leads.id = leads_cstm.id_c WHERE leads.date_entered > DATE_SUB(now(), INTERVAL 2 MONTH) AND (leads_cstm.installation_pictures_c IS NULL or leads_cstm.installation_pictures_c = "") AND leads.deleted = 0 ORDER BY leads.date_entered DESC';
$result = $db->query($query);
if($result->num_rows > 0){
    while($row =  $db->fetchByAssoc($result)){
        $uuid = md5(uniqid(mt_rand(), true));
        $guid =  substr($uuid,0,8)."-".
                substr($uuid,8,4)."-".
                substr($uuid,12,4)."-".
                substr($uuid,16,4)."-".
                substr($uuid,20,12);
        $query_update = 'UPDATE  leads_cstm set installation_pictures_c = "'.$guid.'" WHERE id_c = "'.$row['id'].'"' ;
        $db->query($query_update);
        break;
    }
}
die;
die;
 $db = DBManagerFactory::getInstance();
 $sql = "SELECT aos_line_item_groups.id,aos_line_item_groups.name FROM `aos_line_item_groups` WHERE parent_id = '184c35e5-cf89-404a-02b2-5e7951f3cf06'";
 $result = $db->query($sql);
 while($row =  $db->fetchByAssoc($result)){
    print_r($row);
 }

//  echo "</br>";

//  $sql_product = "SELECT * FROM aos_products_quotes WHERE parent_type = 'PO_purchase_order' AND deleted = 0 AND group_id = '59c97ed6-03bf-5d16-b6bd-5e78573184c9' ORDER BY number";
//  $result = $db->query($sql_product);
//  while($row =  $db->fetchByAssoc($result)){
//     print_r($row);
//  }

//  echo "</br>";

//  $sql_product = "SELECT * FROM aos_products_quotes WHERE parent_type = 'PO_purchase_order' AND deleted = 0 AND group_id = '5db7f5c9-aacd-169f-6e4c-5e7857137a25' ORDER BY number";
//  $result = $db->query($sql_product);
//  while($row =  $db->fetchByAssoc($result)){
//     print_r($row);
 
//  }
//  echo "</br>";

//  $sql_product = "SELECT * FROM aos_products_quotes WHERE parent_type = 'PO_purchase_order' AND deleted = 0 AND group_id = '6182bab2-815c-6335-dfa5-5e7857bcaaf9' ORDER BY number";
//  $result = $db->query($sql_product);
//  while($row =  $db->fetchByAssoc($result)){
//     print_r($row);
//  }



 //$sql_line_item = "SELECT aos_line_item_groups.id,aos_line_item_groups.name FROM aos_line_item_groups INNER JOIN po_purchase_order_pe_warehouse_log_1_c po ON aos_line_item_groups.parent_id = po.po_purchase_order_pe_warehouse_log_1pe_warehouse_log_idb WHERE parent_type = 'pe_warehouse_log' AND aos_line_item_groups.deleted = 0 AND aos_line_item_groups.parent_id = '$record' AND po.po_purchase_order_pe_warehouse_log_1po_purchase_order_ida = '$po_id' AND po.deleted = 0";

// $sql = "UPDATE aos_line_item_groups SET deleted = '1' WHERE aos_line_item_groups.id = '59c97ed6-03bf-5d16-b6bd-5e78573184c9'";
// $db->query($sql);
// $sql = "UPDATE aos_line_item_groups SET deleted = '1' WHERE aos_line_item_groups.id = '5db7f5c9-aacd-169f-6e4c-5e7857137a25'";
// $db->query($sql);

    // $PO_number = $_GET['PO_number'];
    // $po_id = $_GET['PO_ID'];
    // $record = $_GET['record']; 

    // $po_name = '';
    // // get info PO from id PO
    // $PO_bean =  new PO_purchase_order();
    // $PO_bean->retrieve($po_id);
    // if($PO_bean->id != ''){
    //     $PO_number = $PO_bean->number;
    // }                   
    // //get groups line item by po_id(logic for change or not change po_id)
    // //$sql_line_item = "SELECT aos_line_item_groups.id,aos_line_item_groups.name FROM aos_line_item_groups  WHERE parent_type = 'pe_warehouse_log' AND aos_line_item_groups.deleted = 0 AND aos_line_item_groups.parent_id = '$record'";
    // $sql_line_item = "SELECT aos_line_item_groups.id,aos_line_item_groups.name FROM aos_line_item_groups INNER JOIN po_purchase_order_pe_warehouse_log_1_c po ON aos_line_item_groups.parent_id = po.po_purchase_order_pe_warehouse_log_1pe_warehouse_log_idb WHERE parent_type = 'pe_warehouse_log' AND aos_line_item_groups.deleted = 0 AND aos_line_item_groups.parent_id = '$record' AND po.po_purchase_order_pe_warehouse_log_1po_purchase_order_ida = '$po_id' AND po.deleted = 0";
    
    // echo $sql_line_item;
    // $result = $db->query($sql_line_item);
    // while($row =  $db->fetchByAssoc($result)){
    //     $groups[] = $row;
    // }
    // print_r($groups);



die();
 custom_send_message_gateway();
function custom_send_message_gateway()
{
    $message_dir1 = '/var/www/message';
    echo $message_dir1;
    var_dump(check_exist_json_sms("/message"));
    if(check_exist_json_sms("/message")){
        autosendmail_notification("1");
    }

    // $sms_body1 = "This is test message from message 2";
    // $client_number1 = '+61421616733';
    // exec("cd ".$message_dir1."; php send-message.php sms ".$client_number1.' "'.$sms_body1.'"');
    
    $message_dir2 = '/var/www/message2';

    if(check_exist_json_sms("/message2")){
        autosendmail_notification("1");
    }

    // $sms_body2 = "This is test message from message 1";
    // $client_number2 = '+61490942067';
    // exec("cd ".$message_dir2."; php send-message.php sms ".$client_number2.' "'.$sms_body2.'"');
    die;
}
function check_exist_json_sms($folder){
    $check = false;
    $folder_message = '/var/www/suitecrm'.'/..'.$folder.'/'.'messages/';
    $allFiles = scandir($folder_message);
    echo filemtime($folder_message);
    echo  strtotime("-10 minutes");
    if($allFiles !== false){
        $files = array_diff($allFiles, array('.', '..', 'sent_backup'));
        if(count($files) > 0){
            foreach ($files as $file){
                $file_timestamp = filemtime($folder_message.$file);
                if(!isset($date_last)) {
                    $date_last = $file_timestamp;
                    echo  'a : '.$date_last;
                }else if($file_timestamp < $date_last){
                    $date_last = $file_timestamp;
                    echo  'b : '.$date_last;
                }
            }
            if($date_last >= strtotime("-10 minutes")){
                $check = false;
            }else{
                $check = true;
            }
        }else{
            $check = false;
        }
    }else{
       $check = false;
    }
    return $check;
}
function autosendmail_notification($gateway){
    
    //config mail
    $emailObj = new Email();
    $defaults = $emailObj->getSystemDefaultEmail();
    $mail = new SugarPHPMailer();
    $mail->setMailerForSystem();
    //$mail->From = "info@pure-electric.com.au";
    $mail->From = 'thienpb89@gmail.com';
    $mail->FromName = "PureElectric";
    $mail->IsHTML(true);
    $mail->ClearAllRecipients();
    $mail->ClearReplyTos();
    $mail->Subject = "Warning SMS GATEWAY ".$gateway." DOWN";
    $mail->Body = "Warning SMS GATEWAY ".$gateway." DOWN";

    //$mail->AddAddress("info@pure-electric.com.au");
    $mail->AddAddress("thienpb89@gmail.com");
    $mail->prepForOutbound();    
    $mail->setMailerForSystem();   
    $sent = $mail->send();
}
die;
$db = DBManagerFactory::getInstance();
$sql_set_count = "SET @count = 0;";
$result = $db->query($sql_set_count);
$sql_number = "UPDATE contacts SET number = @count:=@count+1 ORDER BY date_entered ASC ";
$result = $db->query($sql_number);

die(); 
$AWS_ACCESS_KEY_ID = 'AKIAJG53TQTXLTGRNAVA';
$AWS_SECRET_ACCESS_KEY = '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';

$folder = dirname(__FILE__) .'/server/php/files/';
$file_array = scandir($folder);
$file_array = array_diff($file_array, array('.', '..'));
foreach($file_array as $file){
    $source_file =  $folder.$file;
    if(is_dir($source_file) && $file != 'attachments'){
        $modified = filemtime($source_file);
        if(strtotime('-4 day') <= $modified){
            $file_child_array = scandir($source_file);
            $file_child_array = array_diff($file_child_array, array('.', '..'));
            foreach($file_child_array as $file_child){
                $source_child_file = $source_file.'/'.$file_child;
                if(strtotime('-4 day') <= filemtime($source_child_file)){
                    echo $source_child_file.'<br>';
                    //echo 'AWS_ACCESS_KEY_ID='.$AWS_ACCESS_KEY_ID.' AWS_SECRET_ACCESS_KEY='.$AWS_SECRET_ACCESS_KEY.' aws s3 cp '.$source_child_file.' s3://'.$GLOBALS['BUCKET_NAME'].'/'.$file.'/'.$file_child;
                    shell_exec('AWS_ACCESS_KEY_ID='.$AWS_ACCESS_KEY_ID.' AWS_SECRET_ACCESS_KEY='.$AWS_SECRET_ACCESS_KEY.' aws s3 cp /var/www/suitecrm/custom/include/SugarFields/Fields/Multiupload/server/php/files/'.$file.'/'.$file_child.' s3://files-bk/'.$file.'/'.$file_child);
                }
            }
        }
    }
}


die;

die;
$db = DBManagerFactory::getInstance();
// Get id and file name as key=> value that parent is email template
$sql = "
SELECT id, filename FROM `notes` WHERE 1
AND `parent_type` = 'Emails'
AND parent_id IN ('7ec05348-7386-6d87-b40b-5aa0905177ca', '29c9f493-2b41-530b-fc8c-5694e1267eed', '2c6db0d1-6843-feb9-5583-5694e1f46257', 'acd0d03e-e494-d298-79ce-5a057236fb84', '61557a5b-c02e-4b48-8a19-5aacd5aee6b0', '5fe5259a-9fb3-b7a8-2473-5ae3eccd9c01', '2e166ef8-a8df-34e9-82d7-5694e1f008c3', '1a916e8d-db16-58d8-cbf8-59fc29f9e49f', 'e537912b-524c-4766-96d3-59cfa4ece333', '3c23be80-7d7c-54a8-1e35-5696387eab4d', 'c466d37b-2ac2-ce42-ba82-59e7e83f6e3b', '5a36a733-f6c1-39b3-a736-5a940feae542', '8d17bb23-939f-d480-8a75-5a940f8a7fe5', '30eab08a-bbd4-77c7-74fe-5694e1341f6f', 'acb8b967-6c65-4445-f464-59ffd089c3a8', '82675a55-a8ea-0439-7ad8-5af3b5b901e5', '6d1dbc2e-38f4-27d6-e08b-5694e1497038', '2361ca39-a862-e898-3cc7-5bb588b9adeb', '2b25ebd0-4c17-a3ca-d689-5694e1730700', 'c223decb-4033-e600-1841-5a00177bdf23', 'ec302586-cd96-e843-bd9b-5b25c5b0b321', '3742953d-1318-43cb-00e3-5bbaab707bcd', '180953f6-3dda-b10e-8f39-5bbbfe2bec38', 'd89d6ef0-411d-395a-710f-5bd15b3f34c0', '98ea8922-6a3f-42b0-e426-5bd15b13c7cb', '12fb3725-0581-cf2c-18ed-5bbbfe6b0089', '5ad80115-b756-ea3e-ca83-5abb005602bf')
";

$ret = $db->query($sql);
$note_files = array();
while($row = $db->fetchByAssoc($ret)){
    $note_files[$row['filename']] = $row['id'];
}


// Tao mảng các file caanf sử lý 
$remove_sql = "
SELECT id, filename FROM `notes` WHERE 1
AND filename IN 
(
    SELECT filename FROM `notes` WHERE 1
    AND `parent_type` = 'Emails' 
    AND parent_id IN ('7ec05348-7386-6d87-b40b-5aa0905177ca', '29c9f493-2b41-530b-fc8c-5694e1267eed', '2c6db0d1-6843-feb9-5583-5694e1f46257', 'acd0d03e-e494-d298-79ce-5a057236fb84', '61557a5b-c02e-4b48-8a19-5aacd5aee6b0', '5fe5259a-9fb3-b7a8-2473-5ae3eccd9c01', '2e166ef8-a8df-34e9-82d7-5694e1f008c3', '1a916e8d-db16-58d8-cbf8-59fc29f9e49f', 'e537912b-524c-4766-96d3-59cfa4ece333', '3c23be80-7d7c-54a8-1e35-5696387eab4d', 'c466d37b-2ac2-ce42-ba82-59e7e83f6e3b', '5a36a733-f6c1-39b3-a736-5a940feae542', '8d17bb23-939f-d480-8a75-5a940f8a7fe5', '30eab08a-bbd4-77c7-74fe-5694e1341f6f', 'acb8b967-6c65-4445-f464-59ffd089c3a8', '82675a55-a8ea-0439-7ad8-5af3b5b901e5', '6d1dbc2e-38f4-27d6-e08b-5694e1497038', '2361ca39-a862-e898-3cc7-5bb588b9adeb', '2b25ebd0-4c17-a3ca-d689-5694e1730700', 'c223decb-4033-e600-1841-5a00177bdf23', 'ec302586-cd96-e843-bd9b-5b25c5b0b321', '3742953d-1318-43cb-00e3-5bbaab707bcd', '180953f6-3dda-b10e-8f39-5bbbfe2bec38', 'd89d6ef0-411d-395a-710f-5bd15b3f34c0', '98ea8922-6a3f-42b0-e426-5bd15b13c7cb', '12fb3725-0581-cf2c-18ed-5bbbfe6b0089', '5ad80115-b756-ea3e-ca83-5abb005602bf')
)
AND parent_id NOT IN ('7ec05348-7386-6d87-b40b-5aa0905177ca', '29c9f493-2b41-530b-fc8c-5694e1267eed', '2c6db0d1-6843-feb9-5583-5694e1f46257', 'acd0d03e-e494-d298-79ce-5a057236fb84', '61557a5b-c02e-4b48-8a19-5aacd5aee6b0', '5fe5259a-9fb3-b7a8-2473-5ae3eccd9c01', '2e166ef8-a8df-34e9-82d7-5694e1f008c3', '1a916e8d-db16-58d8-cbf8-59fc29f9e49f', 'e537912b-524c-4766-96d3-59cfa4ece333', '3c23be80-7d7c-54a8-1e35-5696387eab4d', 'c466d37b-2ac2-ce42-ba82-59e7e83f6e3b', '5a36a733-f6c1-39b3-a736-5a940feae542', '8d17bb23-939f-d480-8a75-5a940f8a7fe5', '30eab08a-bbd4-77c7-74fe-5694e1341f6f', 'acb8b967-6c65-4445-f464-59ffd089c3a8', '82675a55-a8ea-0439-7ad8-5af3b5b901e5', '6d1dbc2e-38f4-27d6-e08b-5694e1497038', '2361ca39-a862-e898-3cc7-5bb588b9adeb', '2b25ebd0-4c17-a3ca-d689-5694e1730700', 'c223decb-4033-e600-1841-5a00177bdf23', 'ec302586-cd96-e843-bd9b-5b25c5b0b321', '3742953d-1318-43cb-00e3-5bbaab707bcd', '180953f6-3dda-b10e-8f39-5bbbfe2bec38', 'd89d6ef0-411d-395a-710f-5bd15b3f34c0', '98ea8922-6a3f-42b0-e426-5bd15b13c7cb', '12fb3725-0581-cf2c-18ed-5bbbfe6b0089', '5ad80115-b756-ea3e-ca83-5abb005602bf')
AND `parent_type` = 'Emails'

";

$ret = $db->query($remove_sql);
$file_need_remove = array();
while($row = $db->fetchByAssoc($ret)){
    $file_need_remove[$row['id']] = $row['filename'];
    
}
echo "need remove";
$file = 0;
foreach($file_need_remove as $key => $file_remove){
    $file ++;
    $unlink = unlink("/var/www/suitecrm/upload/".$key );
    echo "unlink ".$unlink.'<br>';
    //$file_original = $note_files[$file_remove];
    if(isset($note_files[$file_remove])){
        echo "REmove". $note_files[$file_remove]."<br>";
        echo "Inarray<br>";

        if (!symlink("/var/www/suitecrm/upload/".$note_files[$file_remove], 
        "/var/www/suitecrm/upload/".$key)) {
            echo "fail";
        }
        echo $key;
    }
}

echo "FILE: ".$file;

die();


$db = DBManagerFactory::getInstance();
// Get id and file name as key=> value that parent is email template
$sql = "
SELECT leads.id as id FROM `leads` 
LEFT JOIN `emails_beans` ON leads.id = emails_beans.bean_id
LEFT JOIN `emails` ON emails.id = emails_beans.email_id
WHERE leads.deleted = 0
AND leads.status IN ('New', 'Assigned')
AND emails.name LIKE '%Solar PV Powerstation%'
AND emails.status = 'sent'
GROUP BY leads.id
";

$ret = $db->query($sql);
while($row = $db->fetchByAssoc($ret)){
    $lead = new Lead();
    $lead = $lead->retrieve($row['id']);
    if($lead->id != '') {
        $lead->status = 'Info_Pack_Sent';
        $lead->save();
    }
    echo "<br><a href='/index.php?module=Leads&action=EditView&record=".$lead->id."' target='_blank'>".$lead->number."</a>";
}
die;
/// REMOVE THE DUPLICATE FILE 
date_default_timezone_set('Africa/Lagos');
set_time_limit(0);
ini_set('memory_limit', '-1');

$db = DBManagerFactory::getInstance();
$sql = "SELECT id,parent_id FROM aos_line_item_groups WHERE parent_type ='pe_warehouse_log' AND deleted = 0";
$ret = $db->query($sql);
$i=0;
while($row = $db->fetchByAssoc($ret)){
    echo $i;
    $sql_update = 'UPDATE pe_stock_items SET parent_id = "'.$row['parent_id'].'" WHERE group_id = "'.$row['id'].'" AND parent_type ="pe_warehouse_log" AND deleted = 0';
    $db->query($sql_update);
    $i++;
}
die();

/// REMOVE THE DUPLICATE FILE 
$db = DBManagerFactory::getInstance();
// Get id and file name as key=> value that parent is email template
$sql = "
SELECT aos_quotes_cstm.id_c as id ,aos_quotes_cstm.solargain_quote_number_c as SGquoteNumber , aos_quotes_cstm.solargain_tesla_quote_number_c as SGquoteTeslaNumber  
FROM `aos_quotes_cstm` 
LEFT JOIN `aos_quotes` ON aos_quotes.id = aos_quotes_cstm.id_c
WHERE aos_quotes.deleted = 0 
AND (aos_quotes_cstm.sg_site_details_no_c IS NULL OR aos_quotes_cstm.sg_site_details_no_c  = '')
AND ( (aos_quotes_cstm.solargain_quote_number_c IS NOT NULL AND aos_quotes_cstm.solargain_quote_number_c != '')
OR (aos_quotes_cstm.solargain_tesla_quote_number_c IS NOT NULL AND aos_quotes_cstm.solargain_tesla_quote_number_c != '') )
";

$ret = $db->query($sql);
while($row = $db->fetchByAssoc($ret)){
    $username = "matthew.wright";
    $password =  "MW@pure733";
    if($row['SGquoteNumber'] != ''){
        $quote_id = $row['SGquoteNumber'];
    }else{
        $quote_id = $row['SGquoteTeslaNumber'];
    }

    $url = 'https://crm.solargain.com.au/APIv2/quotes/'.$quote_id;

    $curl = curl_init();
    curl_setopt($curl, CURLOPT_URL, $url);
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
    curl_setopt($curl, CURLOPT_CUSTOMREQUEST, "GET");
    curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 0);
    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);
    curl_setopt($curl, CURLOPT_COOKIESESSION, TRUE);
    curl_setopt($curl,CURLOPT_ENCODING , "gzip");
    curl_setopt($curl, CURLOPT_USERAGENT,  $_SERVER['HTTP_USER_AGENT']);
    curl_setopt($curl, CURLOPT_HTTPHEADER, array(
            "Host: crm.solargain.com.au",
            "User-Agent: ". $_SERVER['HTTP_USER_AGENT'],
            "Content-Type: application/json",
            "Accept: application/json, text/plain, */*",
            "Accept-Language: en-US,en;q=0.5",
            "Accept-Encoding: 	gzip, deflate, br",
            "Connection: keep-alive",
            "Authorization: Basic ".base64_encode($username . ":" . $password),
            "Referer: https://crm.solargain.com.au/quote/edit/".$result,
            "Cache-Control: max-age=0"
        )
    );

    $quote = curl_exec($curl);
    curl_close($curl);
    $quote_decode = json_decode($quote);
    
    if(!isset($quote_decode->ID)){
        $username = 'paul.szuster@solargain.com.au';
        $password = 'Partake@19';
        $url = 'https://crm.solargain.com.au/APIv2/quotes/'.$quote_id;

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL, $url);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
        curl_setopt($curl, CURLOPT_CUSTOMREQUEST, "GET");

        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 0);
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
        //
        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);
        curl_setopt($curl, CURLOPT_COOKIESESSION, TRUE);
        curl_setopt($curl,CURLOPT_ENCODING , "gzip");
        curl_setopt($curl, CURLOPT_USERAGENT,  $_SERVER['HTTP_USER_AGENT']);
        curl_setopt($curl, CURLOPT_HTTPHEADER, array(
                "Host: crm.solargain.com.au",
                "User-Agent: ". $_SERVER['HTTP_USER_AGENT'],
                "Content-Type: application/json",
                "Accept: application/json, text/plain, */*",
                "Accept-Language: en-US,en;q=0.5",
                "Accept-Encoding: 	gzip, deflate, br",
                "Connection: keep-alive",
                "Authorization: Basic ".base64_encode($username . ":" . $password),
                "Referer: https://crm.solargain.com.au/quote/edit/".$result,
                "Cache-Control: max-age=0"
            )
        );
        $quote = curl_exec($curl);
        curl_close($curl);
        $quote_decode = json_decode($quote);
    }

    if(isset($quote_decode->ID)){
        $sql_update = "UPDATE aos_quotes_cstm SET sg_site_details_no_c = '" 
        .$quote_decode->Install->ID ."' WHERE id_c = '" .$row['id'] . "'";
        $ret_update = $db->query($sql_update);
        if($ret_update) {
            echo '<a target="_blank" href="/index.php?module=AOS_Quotes&action=EditView&record='.$row['id'].'">'.$row['id'].'</a>';
        }
    }

}

die();
/// REMOVE THE DUPLICATE FILE 
$db = DBManagerFactory::getInstance();
// Get id and file name as key=> value that parent is email template
$sql = "
SELECT * FROM `aos_invoices` WHERE 1 ORDER BY date_entered DESC
";

$ret = $db->query($sql);
while($row = $db->fetchByAssoc($ret)){
    if (strpos($row['name'], "Sanden") !== false) {
        echo $row['id'].'<break/>';
        // set up type = sanden
        $quote = new AOS_Invoices();
        $quote->retrieve($row['id']);
        if(isset($quote->id) && $quote->id != ""){
            $quote->quote_type_c = "quote_type_sanden";
            $quote->save();
        }
    } else if (strpos($row['name'], "Methven") !== false) {
        // set up type = sanden
        echo $row['id'].'<break/>';
        $quote = new AOS_Invoices();
        $quote->retrieve($row['id']);
        if(isset($quote->id) && $quote->id != ""){
            $quote->quote_type_c = "quote_type_methven";
            $quote->save();
        }
    }
}

die();

/// REMOVE THE DUPLICATE FILE 
$db = DBManagerFactory::getInstance();
// Get id and file name as key=> value that parent is email template
$sql = "
SELECT id, filename FROM `notes` WHERE 1
AND `parent_type` = 'Emails'
AND parent_id IN ('7ec05348-7386-6d87-b40b-5aa0905177ca', '29c9f493-2b41-530b-fc8c-5694e1267eed', '2c6db0d1-6843-feb9-5583-5694e1f46257', 'acd0d03e-e494-d298-79ce-5a057236fb84', '61557a5b-c02e-4b48-8a19-5aacd5aee6b0', '5fe5259a-9fb3-b7a8-2473-5ae3eccd9c01', '2e166ef8-a8df-34e9-82d7-5694e1f008c3', '1a916e8d-db16-58d8-cbf8-59fc29f9e49f', 'e537912b-524c-4766-96d3-59cfa4ece333', '3c23be80-7d7c-54a8-1e35-5696387eab4d', 'c466d37b-2ac2-ce42-ba82-59e7e83f6e3b', '5a36a733-f6c1-39b3-a736-5a940feae542', '8d17bb23-939f-d480-8a75-5a940f8a7fe5', '30eab08a-bbd4-77c7-74fe-5694e1341f6f', 'acb8b967-6c65-4445-f464-59ffd089c3a8', '82675a55-a8ea-0439-7ad8-5af3b5b901e5', '6d1dbc2e-38f4-27d6-e08b-5694e1497038', '2361ca39-a862-e898-3cc7-5bb588b9adeb', '2b25ebd0-4c17-a3ca-d689-5694e1730700', 'c223decb-4033-e600-1841-5a00177bdf23', 'ec302586-cd96-e843-bd9b-5b25c5b0b321', '3742953d-1318-43cb-00e3-5bbaab707bcd', '180953f6-3dda-b10e-8f39-5bbbfe2bec38', 'd89d6ef0-411d-395a-710f-5bd15b3f34c0', '98ea8922-6a3f-42b0-e426-5bd15b13c7cb', '12fb3725-0581-cf2c-18ed-5bbbfe6b0089', '5ad80115-b756-ea3e-ca83-5abb005602bf')
";

$ret = $db->query($sql);
$note_files = array();
while($row = $db->fetchByAssoc($ret)){
    $note_files[$row['filename']] = $row['id'];
}


// Tao mảng các file caanf sử lý 
$remove_sql = "
SELECT id, filename FROM `notes` WHERE 1
AND filename IN 
(
    SELECT filename FROM `notes` WHERE 1
    AND `parent_type` = 'Emails' 
    AND parent_id IN ('7ec05348-7386-6d87-b40b-5aa0905177ca', '29c9f493-2b41-530b-fc8c-5694e1267eed', '2c6db0d1-6843-feb9-5583-5694e1f46257', 'acd0d03e-e494-d298-79ce-5a057236fb84', '61557a5b-c02e-4b48-8a19-5aacd5aee6b0', '5fe5259a-9fb3-b7a8-2473-5ae3eccd9c01', '2e166ef8-a8df-34e9-82d7-5694e1f008c3', '1a916e8d-db16-58d8-cbf8-59fc29f9e49f', 'e537912b-524c-4766-96d3-59cfa4ece333', '3c23be80-7d7c-54a8-1e35-5696387eab4d', 'c466d37b-2ac2-ce42-ba82-59e7e83f6e3b', '5a36a733-f6c1-39b3-a736-5a940feae542', '8d17bb23-939f-d480-8a75-5a940f8a7fe5', '30eab08a-bbd4-77c7-74fe-5694e1341f6f', 'acb8b967-6c65-4445-f464-59ffd089c3a8', '82675a55-a8ea-0439-7ad8-5af3b5b901e5', '6d1dbc2e-38f4-27d6-e08b-5694e1497038', '2361ca39-a862-e898-3cc7-5bb588b9adeb', '2b25ebd0-4c17-a3ca-d689-5694e1730700', 'c223decb-4033-e600-1841-5a00177bdf23', 'ec302586-cd96-e843-bd9b-5b25c5b0b321', '3742953d-1318-43cb-00e3-5bbaab707bcd', '180953f6-3dda-b10e-8f39-5bbbfe2bec38', 'd89d6ef0-411d-395a-710f-5bd15b3f34c0', '98ea8922-6a3f-42b0-e426-5bd15b13c7cb', '12fb3725-0581-cf2c-18ed-5bbbfe6b0089', '5ad80115-b756-ea3e-ca83-5abb005602bf')
)
AND parent_id NOT IN ('7ec05348-7386-6d87-b40b-5aa0905177ca', '29c9f493-2b41-530b-fc8c-5694e1267eed', '2c6db0d1-6843-feb9-5583-5694e1f46257', 'acd0d03e-e494-d298-79ce-5a057236fb84', '61557a5b-c02e-4b48-8a19-5aacd5aee6b0', '5fe5259a-9fb3-b7a8-2473-5ae3eccd9c01', '2e166ef8-a8df-34e9-82d7-5694e1f008c3', '1a916e8d-db16-58d8-cbf8-59fc29f9e49f', 'e537912b-524c-4766-96d3-59cfa4ece333', '3c23be80-7d7c-54a8-1e35-5696387eab4d', 'c466d37b-2ac2-ce42-ba82-59e7e83f6e3b', '5a36a733-f6c1-39b3-a736-5a940feae542', '8d17bb23-939f-d480-8a75-5a940f8a7fe5', '30eab08a-bbd4-77c7-74fe-5694e1341f6f', 'acb8b967-6c65-4445-f464-59ffd089c3a8', '82675a55-a8ea-0439-7ad8-5af3b5b901e5', '6d1dbc2e-38f4-27d6-e08b-5694e1497038', '2361ca39-a862-e898-3cc7-5bb588b9adeb', '2b25ebd0-4c17-a3ca-d689-5694e1730700', 'c223decb-4033-e600-1841-5a00177bdf23', 'ec302586-cd96-e843-bd9b-5b25c5b0b321', '3742953d-1318-43cb-00e3-5bbaab707bcd', '180953f6-3dda-b10e-8f39-5bbbfe2bec38', 'd89d6ef0-411d-395a-710f-5bd15b3f34c0', '98ea8922-6a3f-42b0-e426-5bd15b13c7cb', '12fb3725-0581-cf2c-18ed-5bbbfe6b0089', '5ad80115-b756-ea3e-ca83-5abb005602bf')
AND `parent_type` = 'Emails'

";

$ret = $db->query($remove_sql);
$file_need_remove = array();
while($row = $db->fetchByAssoc($ret)){
    $file_need_remove[$row['id']] = $row['filename'];
    
}
echo "need remove";
$file = 0;
foreach($file_need_remove as $key => $file_remove){
    $file ++;
    $unlink = unlink("/var/www/suitecrm/upload/".$key );
    echo "unlink ".$unlink.'<br>';
    //$file_original = $note_files[$file_remove];
    if(isset($note_files[$file_remove])){
        echo "REmove". $note_files[$file_remove]."<br>";
        echo "Inarray<br>";

        if (!symlink("/var/www/suitecrm/upload/".$note_files[$file_remove], 
        "/var/www/suitecrm/upload/".$key)) {
            echo "fail";
        }
        echo $key;
    }
}

echo "FILE: ".$file;
die();

die();
//tu-code upload phone mobile in leads
function upload_phone_mobile_leads(){
    $db = DBManagerFactory::getInstance();
    $sql = "UPDATE leads SET phone_mobile = phone_work WHERE phone_work LIKE '04%' AND  (phone_mobile = '' OR phone_mobile IS NULL)";
    $result = $db->query($sql);

}
upload_phone_mobile_leads();
die();

array_push($job_strings, 'custom_readmail');

function replaceEmailVariables(Email $email, $request)
{
    // request validation before replace bean variables
    $macro_nv = array();
    
    $focusName = $request['parent_type'];
    $focus     = BeanFactory::getBean($focusName, $request['parent_id']);
    
    /**
     * @var EmailTemplate $emailTemplate
     */
    $emailTemplate           = BeanFactory::getBean('EmailTemplates', isset($request['emails_email_templates_idb']) ? $request['emails_email_templates_idb'] : null);
    $email->name             = $emailTemplate->subject;
    $email->description_html = $emailTemplate->body_html;
    $email->description      = $emailTemplate->body;
    $templateData            = $emailTemplate->parse_email_template(array(
        'subject' => $email->name,
        'body_html' => $email->description_html,
        'body' => $email->description
    ), $focusName, $focus, $macro_nv);
    
    $email->name             = $templateData['subject'];
    $email->description_html = $templateData['body_html'];
    $email->description      = $templateData['body'];
    
    return $email;
}

function updateSolargainLead($leadID, $request, $email, $sg_user = "matthew")
{
   
    $lead = new Lead();
    $lead->retrieve($leadID);
    if (!$lead->solargain_lead_number_c) {
        return;
    }
    $solargainLead = $lead->solargain_lead_number_c;
    date_default_timezone_set('Africa/Lagos');
    set_time_limit(0);
    ini_set('memory_limit', '-1');
    if($sg_user == "matthew"){
        $username = "matthew.wright";
        $password = "MW@pure733";
    }else{
        $username = "paul.szuster";
        $password = "Partake@19";
    }
    // Get full json response for Leads
    
    $url = "https://crm.solargain.com.au/APIv2/leads/" . $solargainLead;
    //set the url, number of POST vars, POST data
    
    $curl = curl_init();
    
    curl_setopt($curl, CURLOPT_URL, $url);
    
    
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
    curl_setopt($curl, CURLOPT_CUSTOMREQUEST, "GET");
    
    curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 0);
    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
    //
    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);
    curl_setopt($curl, CURLOPT_COOKIESESSION, TRUE);
    curl_setopt($curl, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']);
    
    curl_setopt($curl, CURLOPT_ENCODING, "gzip");
    
    curl_setopt($curl, CURLOPT_HTTPHEADER, array(
        "Host: crm.solargain.com.au",
        "User-Agent: " . $_SERVER['HTTP_USER_AGENT'],
        "Content-Type: application/json",
        "Accept: application/json, text/plain, */*",
        "Accept-Language: en-US,en;q=0.5",
        "Accept-Encoding:   gzip, deflate, br",
        "Connection: keep-alive",
        "Authorization: Basic " . base64_encode($username . ":" . $password),
        "Referer: https://crm.solargain.com.au/lead/edit/" . $solargainLead,
        "Cache-Control: max-age=0"
    ));
    
    $leadJSON = curl_exec($curl);
    curl_close($curl);
    
    $leadSolarGain = json_decode($leadJSON);
    global $current_user;
    // building Note
    // Logged in user name: Email From name: and email template title 
    $note = "";
    if (isset($email->from_name) && $email->from_name != "") {
        $note = $current_user->full_name . " : " . $email->from_name . " : " . $request["emails_email_templates_name"];
    }
    /*else {
    $note = $current_user->full_name. " : ".$request["emails_email_templates_name"];
    }*/
    $leadSolarGain->Notes[] = array(
        "ID" => 0,
        "Type" => array(
            "ID" => 5,
            "Name" => "E-Mail Out",
            "RequiresComment" => true
        ),
        "Text" => $note
    );
    
    $leadSolarGainJSONDecode = json_encode($leadSolarGain, JSON_UNESCAPED_SLASHES);
    //echo $leadSolarGainJSONDecode;die();
    // Save back lead 
    $url                     = "https://crm.solargain.com.au/APIv2/leads/";
    //set the url, number of POST vars, POST data
    $curl                    = curl_init();
    curl_setopt($curl, CURLOPT_URL, $url);
    //curl_setopt($curl, CURLOPT_USERPWD, $username . ":" . $password);
    
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
    curl_setopt($curl, CURLOPT_POST, 1);
    
    curl_setopt($curl, CURLOPT_POSTFIELDS, $leadSolarGainJSONDecode);
    
    curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 0);
    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
    //
    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);
    curl_setopt($curl, CURLOPT_COOKIESESSION, TRUE);
    curl_setopt($curl, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']);
    curl_setopt($curl, CURLOPT_HTTPHEADER, array(
        "Host: crm.solargain.com.au",
        "User-Agent: " . $_SERVER['HTTP_USER_AGENT'],
        "Content-Type: application/json",
        "Accept: application/json, text/plain, */*",
        "Accept-Language: en-US,en;q=0.5",
        "Accept-Encoding:   gzip, deflate, br",
        "Connection: keep-alive",
        "Content-Length: " . strlen($leadSolarGainJSONDecode),
        "Authorization: Basic " . base64_encode($username . ":" . $password),
        "Referer: https://crm.solargain.com.au/lead/edit/" . $solargainLead
    ));
    
    $lead = json_decode(curl_exec($curl));
    curl_close($curl);
}

function handleMultipleFileAttachments($request, $email)
{
    ///////////////////////////////////////////////////////////////////////////
    ////    ATTACHMENTS FROM TEMPLATES
    // to preserve individual email integrity, we must dupe Notes and associated files
    // for each outbound email - good for integrity, bad for filespace
    if ( /*isset($_REQUEST['template_attachment']) && !empty($_REQUEST['template_attachment'])*/ true) {
        $noteArray = array();
        
        require_once('modules/Notes/Note.php');
        $note        = new Note();
        $where       = "notes.parent_id = '" . $request["emails_email_templates_idb"] . "' ";
        $attach_list = $note->get_full_list("", $where, true); //Get all Notes entries associated with email template
        
        $attachments = array();
        
        $attachments = array_merge($attachments, $attach_list);
        
        foreach ($attachments as $noteId) {
            
            $noteTemplate = new Note();
            $noteTemplate->retrieve($noteId->id);
            $noteTemplate->id           = create_guid();
            $noteTemplate->new_with_id  = true; // duplicating the note with files
            //$noteTemplate->parent_id = $this->id;
            //$noteTemplate->parent_type = $this->module_dir;
            $noteTemplate->parent_id    = $email->id;
            $noteTemplate->parent_type  = $email->module_dir;
            $noteTemplate->date_entered = '';
            $noteTemplate->save();
            
            $noteFile = new UploadFile();
            $noteFile->duplicate_file($noteId->id, $noteTemplate->id, $noteTemplate->filename);
            $noteArray[] = $noteTemplate;
        }
        return $noteArray;
        //$email->attachments = array_merge($email->attachments, $noteArray);
    }
}

function get_string_between($string, $start, $end)
{
    $string = ' ' . $string;
    $ini    = strpos($string, $start);
    if ($ini == 0)
        return '';
    $ini += strlen($start);
    $len = strpos($string, $end, $ini) - $ini;
    return substr($string, $ini, $len);
}

function custom_readmail() 
{
    global $sugar_config;
    
    $folder = $sugar_config['mail_dir'];
    
    $file_array = scandir($folder);
    
    if (count($file_array) == 2)
        return true;
    
    foreach ($file_array as $file) {
        // temporary move file to specials
        //copy($folder . "/" . $file, $folder . "/specials/" . $file);

        if (is_file($folder . "/" . $file)) {
            // parse all content of file to get address
            $l_file_content = file_get_contents($folder . "/" . $file);
            // Parse for create new lead from forwarded newlead@pure-electric.com.au
            preg_match('#To: (.+?)\@pure-electric.com.au#i', $l_file_content, $newlead);
            if($newlead[1] == "newlead"){
                
                $address_street = '';
                $city =  '';
                $state =  '';
                $post_code = '';

                preg_match('#Name (.+?)\n#i', $l_file_content, $lead_name);
                if(count($lead_name) == 2){
                    $lead = explode(" ", trim($lead_name[1]));
                    $first_name = $lead[0];
                    $last_name = str_replace($first_name, "", trim($lead_name[1]));
                }

                preg_match('#Return-Path: <(.+?)>#i', $l_file_content, $matches_email);
                if (count($matches_email) == 2) {
                    $from_email = trim($matches_email[1]);
                }

                preg_match('#Email (.+?)\n#i', $l_file_content, $email);
                if(count($email)==2){
                    $lead_email = $email[1];
                    if($lead_email != ''){
                        //check email is exists
                        $db = DBManagerFactory::getInstance();
                        $query_lead = "SELECT leads.id
                                  FROM leads
                                  JOIN email_addr_bean_rel ON leads.id = email_addr_bean_rel.bean_id
                                  JOIN email_addresses ON email_addr_bean_rel.email_address_id = email_addresses.id
                                  WHERE email_addresses.email_address = '".$lead_email."' AND leads.deleted = 0";
                        $result = $db->query($query_lead);
                        if($result->num_rows > 0){
                            
                            require_once('include/SugarPHPMailer.php');
                            $emailObj = new Email();
                            $defaults = $emailObj->getSystemDefaultEmail();
                            $mail = new SugarPHPMailer();
                            $mail->setMailerForSystem();
                            $mail->From = $defaults['email'];
                            $mail->FromName = $defaults['name'];
                            $mail->IsHTML(true);

                            $mail->Subject = 'Automatically add Lead';

                            $mail->Body = 'Can not automatically add lead because email '.$lead_email.' is exists! ';

                            $mail->prepForOutbound();
                            $mail->AddAddress($from_email);

                            $sent = $mail->Send();
                            die();
                        }
                    }
                }

                preg_match('#Phone (.+?)\n#i', $l_file_content, $phone);
                $phone = $phone[1];

                preg_match('#Address (.+?)\n#i', $l_file_content, $address);
                $address = strtolower($address[1]);

                if($address != ''){
                    $curl = curl_init();
                    $address = str_replace ( " " , "+" , $address );
                    $url = "https://www.energyaustralia.com.au/qt2/app/quoteservice/qas/find?address=".$address."&postcode=";
                    curl_setopt($curl, CURLOPT_URL, $url);
                    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
                    curl_setopt($curl, CURLOPT_CUSTOMREQUEST, "GET");
                    curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 0);
                    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0);
                    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);
                    curl_setopt($curl, CURLOPT_USERAGENT,  $_SERVER['HTTP_USER_AGENT']);
                    curl_setopt($curl, CURLOPT_ENCODING, 'gzip, deflate');
                    curl_setopt($curl, CURLOPT_HTTPHEADER, array(
                            "Host: www.energyaustralia.com.au",
                            "User-Agent: ". $_SERVER['HTTP_USER_AGENT'],
                            "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8",
                            "Accept-Language: en-US,en;q=0.5",
                            "Accept-Encoding: 	gzip, deflate, br",
                            "Connection: keep-alive",
                            "Upgrade-Insecure-Requests: 1",
                            "Cache-Control: max-age=0",
                        )
                    );
                    $result = curl_exec($curl);
                    curl_close($curl);
                    $out_address = json_decode($result);
                    if(count($out_address) >1){
                        $out_address = $out_address[1]->name;
                        $address1 = explode(',',$out_address);
                        $address_street = $address1[0];
                        $address_element = explode('  ',trim($address1[1]));
                        $city =  $address_element[0];
                        $state =  $address_element[1];
                        $post_code = $address_element[2];
                    }
                }

                $lead = new Lead();
                $lead->primary_address_street     = $address_street ? $address_street : "";
                $lead->primary_address_postalcode = $post_code ? $post_code : "";
                $lead->primary_address_city       = $city ? $city : "";
                $lead->primary_address_state      = $state ? $state : "";
                $lead->first_name = $first_name;
                $lead->last_name = $last_name;
                $lead->email1 = $lead_email;
                $lead->phone_mobile = $phone;

                if($from_email == "matthew@pure-electric.com.au" || $from_email == "matthew.wright@pure-electric.com.au"){
                    $lead->assigned_user_id = "8d159972-b7ea-8cf9-c9d2-56958d05485e";
                }else if($from_email == "paul.szuster@pure-electric.com.au" || $from_email == "paul@pure-electric.com.au"){
                    $lead->assigned_user_id = "61e04d4b-86ef-00f2-c669-579eb1bb58fa";
                }else{
                    $lead->assigned_user_id = "8d159972-b7ea-8cf9-c9d2-56958d05485e";
                }
                $lead->save;

                // save file attachment and thumb
                $count_ =  substr_count($l_file_content,'Content-Disposition: attachment;');

                $guid_new = create_guid();
                $current_file_path = dirname(__FILE__).'/../../../../include/SugarFields/Fields/Multiupload/server/php/files/'.$guid_new;
                
                if(!file_exists ( $current_file_path )) {
                    set_time_limit ( 0 );
                    mkdir($current_file_path);
                }

                preg_match_all('/filename="(.*?)"(.*?)--0000000000/s',$l_file_content,$match_pdf);
                for ($i=0; $i < $count_ ; $i++) {
                    $file_name =  $match_pdf[1][$i];
                    $file_content_ = $match_pdf[2][$i];
                    $file_content_ = explode("\n\n",$file_content_);
                    $source = $current_file_path.'/'.$file_name;
                    $fp = fopen($source, "w+");
                    fwrite($fp, base64_decode($file_content_[1]));
                    fclose($fp);

                    if(is_file($source)){
                        $type = strtolower(substr(strrchr($file_name, '.'), 1));
                        $typeok = TRUE;
                        if($type == 'gif' || $type == 'jpg' || $type == 'jpeg' || $type == 'png') {
                            if(!file_exists ($current_file_path."/thumbnail/")) {
                                mkdir($current_file_path."/thumbnail/");
                            }
                            $thumb =  $current_file_path."/thumbnail/".$file_name;
                            switch ($type) {
                                case 'jpg': // Both regular and progressive jpegs
                                case 'jpeg':
                                    $src_func = 'imagecreatefromjpeg';
                                    $write_func = 'imagejpeg';
                                    $image_quality = isset($options['jpeg_quality']) ?
                                        $options['jpeg_quality'] : 75;
                                    break;
                                case 'gif':
                                    $src_func = 'imagecreatefromgif';
                                    $write_func = 'imagegif';
                                    $image_quality = null;
                                    break;
                                case 'png':
                                    $src_func = 'imagecreatefrompng';
                                    $write_func = 'imagepng';
                                    $image_quality = isset($options['png_quality']) ?
                                        $options['png_quality'] : 9;
                                    break;
                                default: $typeok = FALSE; break;
                            }
                            if ($typeok){
                                list($w, $h) = getimagesize($source);

                                $src = $src_func($source);
                                $new_img = imagecreatetruecolor(80,80);
                                imagecopyresampled($new_img,$src,0,0,0,0,80,80,$w,$h);
                                $write_func($new_img,$thumb, $image_quality);

                                imagedestroy($new_img);
                                imagedestroy($src);
                            }
                        }
                    }
                }
                
                $lead->installation_pictures_c = $guid_new;
                $lead->save();
                unlink($folder . "/" . $file);
                return true; // break function 
            }

            // End parese
            preg_match('#Return-Path: <(.+?)>#i', $l_file_content, $email_matches);
            if (isset($email_matches[1]) && $email_matches[1] != "") {
                preg_match('/[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b/i', $email_matches[1], $mail_matchs);
                if (isset($mail_matchs[0]) && $mail_matchs[0] != "") {
                    $email = $mail_matchs[0];
                    $db    = DBManagerFactory::getInstance();
                    $sql   = "SELECT * FROM email_addresses ea 
                                        LEFT JOIN email_addr_bean_rel eabr ON eabr.email_address_id = ea.id 
                                        WHERE 1=1 AND ea.email_address = '$email' AND ea.deleted = 0 AND eabr.deleted = 0 AND eabr.bean_module = 'Leads'
                                        ";
                    $ret   = $db->query($sql);
                    
                    while ($row = $db->fetchByAssoc($ret)) {
                        // We get address here 
                        preg_match('/my address is(:|)(.*?)(\n|\.)/i', $l_file_content, $address_matchs);
                        if (count($address_matchs) && $address_matchs[2] != "") {
                            // use regrxt pattern to get address 
                            // Just update address lead
                            $lead = new Lead();
                            $lead->retrieve($row["bean_id"]);
                            $lead->primary_address_street = $address_matchs[2];
                            $lead->save();
                            sendDesignRequestToAdmin($lead->id);
                            fclose($handle);
                            unlink($folder . "/" . $file);
                            return;
                        }
                    }
                }
            }

            // Get full plain text of email 
            $web_enquiry            = get_string_between($l_file_content, "web.enquiries", "01/01/0001");
            $full_plain_text        = get_string_between($l_file_content, "Content-Type: text/plain;", "Content-Type: text/html;");
            $address_section        = get_string_between($l_file_content, "Site Details", "Roof Type:");
            $address_section        = strip_tags($address_section);
            $address_section        = preg_replace('/\<http(.+?)\>/s', '', $address_section);
            $address_section        = preg_replace("/(^[\r\n]*|[\r\n]+)[\s\t]*[\r\n]+/", "\n", $address_section);
            $client_primary_address = "";

            // Pattern to get 
            $address_pattern = '/(\n([a-zA-Z-\s])+( )|)+(VIC|SA|NSW|ACT|TAS|WA|QLD|NT)+( )+(\d{4})/s';
            $out_address     = array();
            preg_match_all($address_pattern, $address_section, $out_address, PREG_PATTERN_ORDER);
            $out_address[0][0] = trim($out_address[0][0]);
            if (isset($out_address[0][0]) && $out_address[0][0] != "") {
                $address_element = explode(" ", $out_address[0][0]);
                if (count($address_element) >= 3) {
                    $state            = $address_element[count($address_element) - 2];
                    $post_code        = $address_element[count($address_element) - 1];
                    $suburb           = str_replace($state . " " . $post_code, "", $out_address[0][0]);
                    $suburb           = str_replace("-", "", $suburb);
                    $exploded_address = explode("\n", $out_address[0][0]);
                    if (count($exploded_address) == 2)
                        $client_primary_address = $exploded_address[0];
                }
                
                if (count($address_element) == 2) {
                    $state     = $address_element[0];
                    $post_code = $address_element[1];
                    $suburb    = "";
                }
            }

            // Special solve address 
            // dont understand why it s coded
            if (false){ //$client_primary_address == "") {
                /*$handle = fopen($folder."/".$file, "r");
                if ($handle) {
                $temp_client_primary_address = "";
                while (($line = fgets($handle)) !== false) {
                // get the next line
                if(isset($out_address[0][0]) &&  $out_address[0][0] != "" && (strpos($line, $out_address[0][0] ) !== false) ){
                if(strlen($temp_client_primary_address) > 5)
                if($client_primary_address == "") $client_primary_address = $temp_client_primary_address;
                }
                $temp_client_primary_address = $line;
                }
                }
                fclose($handle);
                */
                $client_primary_address = trim(preg_replace('/[^a-zA-Z0-9]/', " ", str_replace(array(
                    $suburb,
                    $post_code,
                    $state
                ), "", $address_section)));
            }
            
            if (strlen($client_primary_address) < 2)
                $client_primary_address = "";
            
            $handle = fopen($folder . "/" . $file, "r");
            if ($handle) {
                $live_chat_text        = "";
                $solargain_lead_number = "";
                $note                  = "";
                $end_live_chat         = false;
                while (($line = fgets($handle)) !== false) {
                    if (strpos($line, "This e-mail is private and confidential") !== false) {
                        fclose($handle);
                        copy($folder . "/" . $file, $folder . "/backup/" . $file);
                        unlink($folder . "/" . $file);
                        break;
                    }
                    ;
                    if (strpos(strtolower($line), "lead/edit") !== false) {
                        preg_match('/lead\/edit\/(.+?)>]/', strtolower($line), $match_firstchars);
                        if (isset($match_firstchars[1]) && $match_firstchars[1] != "") {
                            // Neu solargain lead number van la solargain cu ta continue toi dong tiep theo cho den khi gap Lead Edit 
                            if ($solargain_lead_number == $match_firstchars[1])
                                continue;
                            $solargain_lead_number = $match_firstchars[1];
                        } else
                            continue;
                        
                        while (($line1 = fgets($handle)) !== false) {
                            
                            if (strpos($line1, "This e-mail is private and confidential") !== false) {
                                fclose($handle);
                                copy($folder . "/" . $file, $folder . "/backup/" . $file);
                                unlink($folder . "/" . $file);
                                break;
                            }
                            ;
                            
                            $line1 = strip_tags($line1);
                            // Co live chat
                            if (strpos($line1, "livechat") !== false) {
                                $api_comment_line = fgets($handle);
                                
                                if ($api_comment_line !== false && (strpos($api_comment_line, "API Comment: Livechat Submission") !== false)) {
                                    $blank_line = fgets($handle);
                                    while (($l_line = fgets($handle)) !== false) {
                                        
                                        if (strpos($l_line, "This e-mail is private and confidential") !== false) {
                                            fclose($handle);
                                            copy($folder . "/" . $file, $folder . "/backup/" . $file);
                                            unlink($folder . "/" . $file);
                                            break;
                                        }
                                        ;
                                        
                                        if (strpos($l_line, "Customer Details") == false) {
                                            if (strpos($l_line, "01/01/0001") !== false) {
                                                $end_live_chat = true;
                                            } else {
                                                if (!$end_live_chat)
                                                    $live_chat_text .= trim(strip_tags($l_line), "=\n");
                                            }
                                        } else if (strpos($l_line, "Customer Details") !== false) {
                                            // Read the next line
                                            if (($next_line = fgets($handle)) !== false) {
                                                $next_line = strip_tags($next_line);
                                                if (strpos($next_line, ",") !== false) {
                                                    $names = explode(",", $next_line);
                                                } else {
                                                    $names = explode(" ", $next_line);
                                                }
                                                $first_name = "";
                                                $last_name  = "";
                                                $first_name = trim($names[1] ? $names[1] : "");
                                                $first_name = ucfirst(strtolower($first_name));
                                                $last_name  = trim($names[0] ? $names[0] : "");
                                                $last_name  = ucfirst(strtolower($last_name));
                                                
                                                if ($first_name == "") {
                                                    $last_name_explode = explode(" ", $last_name);
                                                    if (count($last_name_explode) > 1) {
                                                        $real_last_name = end($last_name_explode);
                                                        $first_name     = str_replace($real_last_name, "", $last_name);
                                                        $last_name      = $real_last_name;
                                                    }
                                                }
                                                
                                                $phone_mobile = "";
                                                $phone_work   = "";
                                                $email        = "";
                                                
                                                // Not exist do our next work
                                                // read all line by while until we get the new custommer lead
                                                
                                                while (($next_line = fgets($handle)) !== false) {
                                                    //if touch to end of New lead sections
                                                    // we do the if statement for each pattern here
                                                    if (strpos($next_line, "This e-mail is private and confidential") !== false) {
                                                        fclose($handle);
                                                        copy($folder . "/" . $file, $folder . "/backup/" . $file);
                                                        unlink($folder . "/" . $file);
                                                        break;
                                                    }
                                                    
                                                    if (strpos($next_line, "m:") === 0) {
                                                        $phone_mobile = strip_tags(trim(str_replace(array(
                                                            "m:",
                                                            "**",
                                                            "*m:*"
                                                        ), "", $next_line)));
                                                        $phone_mobile = ($phone_mobile != "N/A\n" && is_numeric(str_replace('+','',str_replace(' ', '',$phone_mobile))) ) ? $phone_mobile : "";
                                                    }

                                                    if (strpos($next_line, "p:") !== false) {
                                                        $phone_work = strip_tags(trim(str_replace(array(
                                                            "*p:*",
                                                            "p:"
                                                        ), "", $next_line)));
                                                        $phone_work = ($phone_work != "N/A\n" && is_numeric(str_replace('+','',str_replace(' ', '',$phone_work))) ) ? $phone_work : "";
                                                    }
                                                    
                                                    if ( (strpos($next_line, "e:") === 0 || strpos($next_line, "*e:") === 0) && strpos($next_line, "@") !== false) {
                                                        //$email = strip_tags(trim(str_replace(array("*e:*", "e:"), "", $next_line)));
                                                        //$email = trim(str_replace(array("*e:*", "e:"),"",strip_tags( $next_line)));
                                                        //$email = ($email != "N/A\n") ? trim($email) : "";
                                                        preg_match('/[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b/i', $next_line, $mail_match_firstchars);
                                                        if (isset($mail_match_firstchars[0]) && $mail_match_firstchars[0] != "") {
                                                            $email = $mail_match_firstchars[0];
                                                        }
                                                        
                                                        // If we have already name in database Break
                                                        $db = DBManagerFactory::getInstance();
                                                        if ($first_name == "" && $last_name == "") {
                                                            fclose($handle);
                                                            unlink($folder . "/" . $file);
                                                            return;
                                                        }
                                                        
                                                        $db  = DBManagerFactory::getInstance();
                                                        $sql = "SELECT * FROM email_addresses ea 
                                                                            LEFT JOIN email_addr_bean_rel eabr ON eabr.email_address_id = ea.id 
                                                                            WHERE 1=1 AND ea.email_address = '$email' AND ea.deleted = 0 AND eabr.deleted = 0 AND eabr.bean_module = 'Leads'
                                                                            ";
                                                        $ret = $db->query($sql);
                                                        
                                                        while ($row = $db->fetchByAssoc($ret)) {
                                                            if (isset($row["bean_id"]) && $row["bean_id"] != "") {
                                                                fclose($handle);
                                                                unlink($folder . "/" . $file);
                                                                return;
                                                            }
                                                        }
                                                        
                                                        $sql = "SELECT * FROM leads WHERE 1=1 ";
                                                        //if ($first_name != "")
                                                        $sql .= " AND first_name = '" . $first_name . "'";
                                                        //if ($last_name != "")
                                                        $sql .= " AND last_name = '" . $last_name . "'";
                                                        $sql .= " AND deleted != 1 ";
                                                        $ret      = $db->query($sql);
                                                        $is_exsit = false;
                                                        while ($row = $db->fetchByAssoc($ret)) {
                                                            if (isset($row) && $row != null) {
                                                                $lead = new Lead();
                                                                $lead->retrieve($row["id"]);
                                                                
                                                                if ($lead->email1 == $email)
                                                                    $is_exsit = true;
                                                                if ($email == "") {
                                                                    $is_exsit = true;
                                                                }
                                                            }
                                                        }

                                                        if ($is_exsit) {
                                                            fclose($handle);
                                                            unlink($folder . "/" . $file);
                                                            return;
                                                        }
                                                        
                                                        $next_second_line = fgets($handle);
                                                        $note .= $next_second_line;
                                                        
                                                        //$GLOBALS['log']->debug('--------------------------------------------> at mext line.php <--------------------------------------------' .$next_second_line );
                                                        $next_third_line = fgets($handle);
                                                        $note .= $next_third_line;
                                                        
                                                        if ($next_third_line == $out_address[0][0] && strlen($next_second_line) > 5) {
                                                            $street_address = strip_tags($next_second_line);
                                                        }

                                                        // If it is full adreses
                                                        if (!isset($post_code) || $post_code == "") {
                                                            if (strlen($next_second_line) > 5) {
                                                                $next_fourth_line = fgets($handle);
                                                                if (preg_match_all('/VIC|SA|NSW|ACT|TAS|WA|QLD|NT/', $next_fourth_line, $match_firstchars, PREG_PATTERN_ORDER)) {
                                                                    $next_fourth_line = trim(strip_tags($next_fourth_line));
                                                                    //$GLOBALS['log']->debug('--------------------------------------------> at thirdline .php <--------------------------------------------' .$next_third_line );
                                                                    //if(preg_match_all('/VIC|SA|NSW|ACT|TAS|WA|QLD|NT/', $next_third_line, $match_firstchars,PREG_PATTERN_ORDER))
                                                                    $state            = $match_firstchars[0][0];
                                                                    
                                                                    $match_subburb = preg_split('/VIC|SA|NSW|ACT|TAS|WA|QLD|NT/', $next_fourth_line);
                                                                    $suburb        = $match_subburb[0];
                                                                    $post_code     = $match_subburb[1];
                                                                }
                                                            } elseif (preg_match_all('/VIC|SA|NSW|ACT|TAS|WA|QLD|NT/', $next_third_line, $match_firstchars, PREG_PATTERN_ORDER)) {
                                                                $next_third_line = trim(strip_tags($next_third_line));
                                                                //$GLOBALS['log']->debug('--------------------------------------------> at thirdline .php <--------------------------------------------' .$next_third_line );
                                                                //if(preg_match_all('/VIC|SA|NSW|ACT|TAS|WA|QLD|NT/', $next_third_line, $match_firstchars,PREG_PATTERN_ORDER))
                                                                $state           = $match_firstchars[0][0];
                                                                
                                                                $match_subburb = preg_split('/VIC|SA|NSW|ACT|TAS|WA|QLD|NT/', $next_third_line);
                                                                $suburb        = $match_subburb[0];
                                                                $post_code     = $match_subburb[1];
                                                            }
                                                        }
                                                    }
                                                    $note .= strip_tags($next_line);
                                                    if (strpos(strtolower($next_line), "assigned to") !== false) {
                                                        $note .= strip_tags($next_line);
                                                    }
                                                    
                                                }
                                                //if (strpos($line1, "Status:") !== false) break;
                                            }
                                            
                                            // store lead here
                                            if ($first_name != "" || $last_name != "") {
                                                $lead                             = new Lead();
                                                $lead->first_name                 = $first_name;
                                                $lead->last_name                  = $last_name;
                                                $lead->email1                     = $email;
                                                $lead->phone_mobile               = $phone_mobile;
                                                $lead->phone_work                 = $phone_work;
                                                $lead->solargain_lead_number_c    = $solargain_lead_number;
                                                $lead->primary_address_postalcode = $post_code ? $post_code : "";
                                                $lead->primary_address_city       = $suburb ? $suburb : "";
                                                $lead->primary_address_state      = $state ? $state : "";
                                                $lead->live_chat_c                = $live_chat_text ? str_replace("\n\n", "", $live_chat_text) : $web_enquiry;
                                                $lead->lead_source                = "Solargain";
                                                $lead->primary_address_street     = $client_primary_address ? $client_primary_address : ($street_address ? $street_address : "");
                                                if(strtolower(trim($lead->primary_address_street)) == 'n a' || strtolower(trim($lead->primary_address_street)) == 'n/a' || strtolower(trim($lead->primary_address_street)) == 'na'){
                                                    $lead->primary_address_street = "";
                                                }
                                                $full_plain_text_explode          = explode("This e-mail is private and confidential", $full_plain_text);
                                                $note_des = explode("Notes", $full_plain_text_explode[0]);
                                                $lead->description                = $note_des[1];
                                                $lead->address_provided_c         = $client_primary_address ? "1" : "0";
                                                $lead->status                     = "Assigned";
                                                
                                                
                                                preg_match('#Return-Path: <(.+?)>#i', $l_file_content, $sent_froms);
                                                if(isset($sent_froms[1]) && $sent_froms[1] == "Matthew.Wright@solargain.com.au"){
                                                    $random_number = 60;
                                                } elseif(isset($sent_froms[1]) && (strtolower($sent_froms[1]) == "paul.szuster@solargain.com.au")) {
                                                    $random_number = 40;
                                                } else {
                                                    $random_number = rand ( 1 , 100 );
                                                }
                                                
                                                if ($random_number <= 50) {
                                                    $lead->assigned_user_id = "61e04d4b-86ef-00f2-c669-579eb1bb58fa"; // Paul
                                                } else{
                                                    $lead->assigned_user_id = "8d159972-b7ea-8cf9-c9d2-56958d05485e"; // Matth
                                                }
                                                
                                                $lead->save();
                                                /* Need enought address
                                                $primary_address_street = $lead->primary_address_street;
                                                $primary_address_city = $lead->primary_address_city;
                                                $primary_address_state = $lead->primary_address_state;
                                                $primary_address_postalcode = $lead->primary_address_postalcode;
                                                */
                                                if ($lead->primary_address_street == "" || $lead->primary_address_city == "" || $lead->primary_address_state == "" || $lead->primary_address_postalcode == "") {
                                                    
                                                    // Send email
                                                    if ($random_number <= 50) {
                                                        $from_address = "Paul Szuster - PureElectric &lt;paul.szuster@pure-electric.com.au&gt;";
                                                    } else{
                                                        $from_address = "Matthew Wright - PureElectric &lt;matthew.wright@pure-electric.com.au&gt;";
                                                    }
                                                    
                                                    $temp_request = array(
                                                        "module" => "Emails",
                                                        "action" => "send",
                                                        "record" => "",
                                                        "type" => "out",
                                                        "send" => 1,
                                                        "inbound_email_id" => ($random_number > 50) ? "58cceed9-3dd3-d0b5-43b2-59f1c80e3869" : "8dab4c79-32d8-0a26-f471-59f1c4e037cf",
                                                        "emails_email_templates_name" => "Solargain / NO ADDRESS / Solar PV / QCells 300 / Fronius MAIN",
                                                        "emails_email_templates_idb" => "58230a56-82cd-03ae-1d60-59eec0f8582d",
                                                        "parent_type" => "Leads",
                                                        "parent_name" => $lead->first_name ." ". $lead->last_name,
                                                        "parent_id" => $lead->id,
                                                        "from_addr" => $from_address,
                                                        "to_addrs_names" => $lead->email1, //"binhdigipro@gmail.com",//$lead->email1,
                                                        "cc_addrs_names" => "info@pure-electric.com.au",
                                                        "bcc_addrs_names" =>  "binh.nguyen@pure-electric.com.au",
                                                        "is_only_plain_text" => false
                                                    );

                                                    $emailBean    = new Email();
                                                    $emailBean    = $emailBean->populateBeanFromRequest($emailBean, $temp_request);
                                                    
                                                    $emailBean->save();
                                                    
                                                    $emailBean->saved_attachments = handleMultipleFileAttachments($temp_request, $emailBean);
                                                    //$GLOBALS['log']->debug('--------------------------------------------> LEAD Number Run HERE <--------------------------------------------\n' .$solargain_lead_number );
                                                    // parse and replace bean variables
                                                    $emailBean                    = replaceEmailVariables($emailBean, $temp_request);
                                                    
                                                    // Signature
                                                    $matthew_id                   = "8d159972-b7ea-8cf9-c9d2-56958d05485e";
                                                    $paul_id                      = "61e04d4b-86ef-00f2-c669-579eb1bb58fa";
                                                    $user                         = new User();
                                                    $user->retrieve($matthew_id);

                                                    if ($random_number <= 50) {
                                                        $emailSignatureId = "4857e8ef-cff5-cefd-9e0b-59f075f61bbe";
                                                    } else{
                                                        $emailSignatureId = "6157d3e7-7183-8197-ed43-59f03cf9ba9d"; // Matthew signature
                                                    }
                                                    
                                                    $signature = $user->getSignature($emailSignatureId);
                                                    $emailBean->description .= $signature["signature"];
                                                    $emailBean->description_html .= $signature["signature_html"];
                                                    $emailBean->description .= $live_chat_text;
                                                    $emailBean->description_html .= $live_chat_text;
                                                    
                                                    //thien fix save email khi có live chat
                                                    $emailBean->save();
                                                    
                                                    $lead->email_send_id_c     = $emailBean->id;
                                                    $lead->email_send_status_c = 'pending';
                                                    $lead->save();
                                                    
                                                    if ($temp_request["parent_type"] == "Leads") {
                                                        $leadID = $temp_request["parent_id"];
                                                        //updateSolargainLead($leadID, $temp_request, $emailBean);
                                                    }
                                                    
                                                    //$body_html = $emailBean->description_html;
                                                    
                                                    // thien comment
                                                    // if ($emailBean->send()) {
                                                    //     $emailBean->status = 'sent';
                                                    //     // Do extended things here
                                                    //     // Save note to solargain
                                                    
                                                    //     if($temp_request["parent_type"] == "Leads"){
                                                    //         $leadID = $temp_request["parent_id"];
                                                    //         updateSolargainLead($leadID, $temp_request, $emailBean);
                                                    //     }
                                                    //     $emailBean->save();
                                                    
                                                    //     $body_html = $emailBean->description_html;
                                                    
                                                    // } else {
                                                    //     // Don't save status if the email is a draft.
                                                    //         // We need to ensure that drafts will still show
                                                    //         // in the list view
                                                    //         if ($emailBean->status !== 'draft') {
                                                    //             $emailBean->status = 'send_error';
                                                    //             $emailBean->save();
                                                    //         } else {
                                                    //             $emailBean->status = 'send_error';
                                                    //         }
                                                    // }

                                                    // Send SMS to client too 
                                                    $phone_number = $lead->phone_mobile ? $lead->phone_mobile : $lead->phone_work;
                                                    if($phone_number){
                                                        $phone_number = preg_replace("/^0/", "+61", preg_replace('/\D/', '', $phone_number));
                                                        if(strlen($phone_number) >= 10){
                                                            $phone_number = preg_replace("/^61/", "+61", $phone_number);
                                                            if(strpos($phone_number, "+61") !== false ){
                                                                $user = new User();
                                                                $user = $user->retrieve($lead->assigned_user_id);
                                                                $message_body = 'Hi '.$lead->first_name.', my name is '.$user->first_name.' from Solargain. I received your request for a Solargain solar/battery quote for your place, I have that you are in '.$lead->primary_address_city.' '.$lead->primary_address_state.'. If you could please reply back with your street address I would be more than happy to assist.  Look forward to your response. Regards, '.$user->first_name;
                                                                //exec("cd ".$sugar_config["message_command_dir"]."; php send-message.php sms ".$phone_number.' "'.$message_body.'"');
                                                            }
                                                        }
                                                    }
                                                } else {
                                                    //thien fix
                                                    // Do nothing
                                                }
                                                $record_id = $lead->id;
                                                sendDesignRequestToAdmin($record_id);
                                            }
                                            
                                        }
                                    }
                                }
                                //$GLOBALS['log']->debug('--------------------------------------------> Live chat <--------------------------------------------\n' .$live_chat_text );
                            }
                            // Khong co live chat
                            if (strpos($line1, "Customer Details") !== false) {
                                // Read the next line
                                if (($next_line = fgets($handle)) !== false) {
                                    $next_line  = fgets($handle);
                                    $next_line  = strip_tags($next_line);
                                    $names      = explode(",", $next_line);
                                    $first_name = "";
                                    $last_name  = "";
                                    $first_name = trim($names[1] ? $names[1] : "");
                                    $first_name = ucfirst(strtolower($first_name));
                                    $last_name  = trim($names[0] ? $names[0] : "");
                                    $last_name  = ucfirst(strtolower($last_name));
                                    
                                    $phone_mobile = "";
                                    $phone_work   = "";
                                    $email        = "";
                                    
                                    // Not exist do our next work
                                    // read all line by while until we get the new custommer lead
                                    
                                    while (($next_line = fgets($handle)) !== false) {
                                        //if touch to end of New lead sections
                                        // we do the if statement for each pattern here
                                        
                                        if (strpos($next_line, "This e-mail is private and confidential") !== false) {
                                            fclose($handle);
                                            copy($folder . "/" . $file, $folder . "/backup/" . $file);
                                            unlink($folder . "/" . $file);
                                            break;
                                        }
                                    
                                        if (strpos($next_line, "m:") === 0) {
                                            $phone_mobile = strip_tags(trim(str_replace(array(
                                                "m:",
                                                "**",
                                                "*m:*"
                                            ), "", $next_line)));
                                            $phone_mobile = ($phone_mobile != "N/A\n" && is_numeric(str_replace('+','',str_replace(' ', '',$phone_mobile))) ) ? $phone_mobile : "";
                                        }
                                        
                                        if (strpos($next_line, "p:") !== false) {
                                            $phone_work = strip_tags(trim(str_replace(array(
                                                "*p:*",
                                                "p:"
                                            ), "", $next_line)));
                                            $phone_work = ($phone_work != "N/A\n" && is_numeric(str_replace('+','',str_replace(' ', '',$phone_work))) ) ? $phone_work : "";
                                        }
                                        
                                        if ( (strpos($next_line, "e:") === 0 || strpos($next_line, "*e:") === 0) && strpos($next_line, "@") !== false) {
                                            //$email = strip_tags(trim(str_replace(array("*e:*", "e:"), "", $next_line)));
                                            //$email = trim(str_replace(array("*e:*", "e:"),"",strip_tags( $next_line)));
                                            //$email = ($email != "N/A\n") ? trim($email) : "";
                                            preg_match('/[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b/i', $next_line, $mail_match_firstchars);
                                            if (isset($mail_match_firstchars[0]) && $mail_match_firstchars[0] != "") {
                                                $email = $mail_match_firstchars[0];
                                            }
                                            
                                            // If we have already name in database Break
                                            $db = DBManagerFactory::getInstance();
                                            if ($first_name == "" && $last_name == "") {
                                                fclose($handle);
                                                unlink($folder . "/" . $file);
                                                return;
                                            }
                                            $sql = "SELECT * FROM leads WHERE 1=1 ";
                                            //if ($first_name != "")
                                            $sql .= " AND first_name = '" . $first_name . "'";
                                            //if ($last_name != "")
                                            $sql .= " AND last_name = '" . $last_name . "'";
                                            $sql .= " AND deleted != 1 ";
                                            $ret      = $db->query($sql);
                                            $is_exsit = false;
                                            while ($row = $db->fetchByAssoc($ret)) {
                                                if (isset($row) && $row != null) {
                                                    $lead = new Lead();
                                                    $lead->retrieve($row["id"]);
                                                    
                                                    if ($lead->email1 == $email)
                                                        $is_exsit = true;
                                                }
                                            }
                                            if ($is_exsit) {
                                                fclose($handle);
                                                unlink($folder . "/" . $file);
                                                return;
                                            }
                                            
                                            $next_second_line = fgets($handle);
                                            $note .= $next_second_line;
                                            //$GLOBALS['log']->debug('--------------------------------------------> at mext line.php <--------------------------------------------' .$next_second_line );
                                            $next_third_line = fgets($handle);
                                            $note .= $next_third_line;
                                            
                                            if ($next_third_line == $out_address[0][0] && strlen($next_second_line) > 5) {
                                                $street_address = strip_tags($next_second_line);
                                            }
                                            
                                            // If it is full adreses
                                            if (!isset($post_code) || $post_code == "") {
                                                if (strlen($next_second_line) > 5) {
                                                    $next_fourth_line = fgets($handle);
                                                    if (preg_match_all('/VIC|SA|NSW|ACT|TAS|WA|QLD|NT/', $next_fourth_line, $match_firstchars, PREG_PATTERN_ORDER)) {
                                                        $next_fourth_line = trim(strip_tags($next_fourth_line));
                                                        //$GLOBALS['log']->debug('--------------------------------------------> at thirdline .php <--------------------------------------------' .$next_third_line );
                                                        //if(preg_match_all('/VIC|SA|NSW|ACT|TAS|WA|QLD|NT/', $next_third_line, $match_firstchars,PREG_PATTERN_ORDER))
                                                        $state            = $match_firstchars[0][0];
                                                        
                                                        $match_subburb = preg_split('/VIC|SA|NSW|ACT|TAS|WA|QLD|NT/', $next_fourth_line);
                                                        $suburb        = $match_subburb[0];
                                                        $post_code     = $match_subburb[1];
                                                    }
                                                } elseif (preg_match_all('/VIC|SA|NSW|ACT|TAS|WA|QLD|NT/', $next_third_line, $match_firstchars, PREG_PATTERN_ORDER)) {
                                                    $next_third_line = trim(strip_tags($next_third_line));
                                                    //$GLOBALS['log']->debug('--------------------------------------------> at thirdline .php <--------------------------------------------' .$next_third_line );
                                                    //if(preg_match_all('/VIC|SA|NSW|ACT|TAS|WA|QLD|NT/', $next_third_line, $match_firstchars,PREG_PATTERN_ORDER))
                                                    $state           = $match_firstchars[0][0];
                                                    
                                                    $match_subburb = preg_split('/VIC|SA|NSW|ACT|TAS|WA|QLD|NT/', $next_third_line);
                                                    $suburb        = $match_subburb[0];
                                                    $post_code     = $match_subburb[1];
                                                }
                                            }
                                        }
                                        $note .= strip_tags($next_line);
                                        
                                        if (strpos(strtolower($next_line), "Assigned To") !== false) {
                                            $note .= strip_tags($next_line);
                                        }
                                        
                                    }
                                    
                                    //if (strpos($line1, "Status:") !== false) break;
                                    
                                }
                                // store lead here

                                if ($first_name != "" || $last_name != "") {
                                    $lead                             = new Lead();
                                    $lead->first_name                 = $first_name;
                                    $lead->last_name                  = $last_name;
                                    $lead->email1                     = $email;
                                    $lead->phone_mobile               = $phone_mobile;
                                    $lead->phone_work                 = $phone_work;
                                    $lead->solargain_lead_number_c    = $solargain_lead_number;
                                    $lead->primary_address_postalcode = $post_code ? $post_code : "";
                                    $lead->primary_address_city       = $suburb ? $suburb : "";
                                    $lead->primary_address_state      = $state ? $state : "";
                                    $lead->primary_address_street     = $client_primary_address ? $client_primary_address : ($street_address ? $street_address : "");
                                    if(strtolower(trim($lead->primary_address_street)) == 'n a' || strtolower(trim($lead->primary_address_street)) == 'n/a' || strtolower(trim($lead->primary_address_street)) == 'na'){
                                        $lead->primary_address_street = "";
                                    }
                                    $lead->live_chat_c                = $live_chat_text ? str_replace("\n\n", "", $live_chat_text) : $web_enquiry;
                                    $lead->lead_source                = "Solargain";
                                    $full_plain_text_explode          = explode("This e-mail is private and confidential", $full_plain_text);
                                    $note_des = explode("Notes", $full_plain_text_explode[0]);
                                    $lead->description                = $note_des[1];
                                    
                                    $lead->address_provided_c = $client_primary_address ? "1" : "0";
                                    $lead->status             = "Assigned";

                                    preg_match('#Return-Path: <(.+?)>#i', $l_file_content, $sent_froms);
                                    if(isset($sent_froms[1]) && $sent_froms[1] == "Matthew.Wright@solargain.com.au"){
                                        $random_number = 60;
                                    } elseif(isset($sent_froms[1]) && (strtolower($sent_froms[1]) == "paul.szuster@solargain.com.au")) {
                                        $random_number = 40;
                                    } else {
                                        $random_number = rand ( 1 , 100 );
                                    }
                                    
                                    if ($random_number <= 50) {
                                        $lead->assigned_user_id = "61e04d4b-86ef-00f2-c669-579eb1bb58fa"; // Paul
                                    } else{
                                        $lead->assigned_user_id = "8d159972-b7ea-8cf9-c9d2-56958d05485e"; // Matth
                                    }
                                    
                                    $lead->save();
                                    
                                    if ($random_number <= 50) {
                                        $from_address = "Paul Szuster - PureElectric &lt;paul.szuster@pure-electric.com.au&gt;";
                                    } else{
                                        $from_address = "Matthew Wright - PureElectric &lt;matthew.wright@pure-electric.com.au&gt;";
                                    }
                                    
                                    $matthew_inbound_id = "58cceed9-3dd3-d0b5-43b2-59f1c80e3869";
                                    $paul_inbound_id    = "ae0192a6-b70b-23a1-8dc0-59f1c819a22c";
                                    
                                    if ($lead->primary_address_street == "" || $lead->primary_address_city == "" || $lead->primary_address_state == "" || $lead->primary_address_postalcode == "") {
                                        $temp_request        = array(
                                            "module" => "Emails",
                                            "action" => "send",
                                            "record" => "",
                                            "type" => "out",
                                            "send" => 1,
                                            "inbound_email_id" => ($random_number > 50) ? "58cceed9-3dd3-d0b5-43b2-59f1c80e3869" : "8dab4c79-32d8-0a26-f471-59f1c4e037cf",
                                            "emails_email_templates_name" => "Solargain / NO ADDRESS / Solar PV / QCells 300 / Fronius MAIN",
                                            "emails_email_templates_idb" => "58230a56-82cd-03ae-1d60-59eec0f8582d",
                                            "parent_type" => "Leads",
                                            "parent_name" => $lead->first_name .' '. $lead->last_name,
                                            "parent_id" => $lead->id,
                                            "from_addr" => $from_address,
                                            "to_addrs_names" => $lead->email1, //$lead->email1, //"binhdigipro@gmail.com",
                                            "cc_addrs_names" => "info@pure-electric.com.au",
                                            "bcc_addrs_names" => "binh.nguyen@pure-electric.com.au",
                                            "is_only_plain_text" => false
                                        );

                                        $emailBean           = new Email();
                                        $emailBean           = $emailBean->populateBeanFromRequest($emailBean, $temp_request);
                                        $inboundEmailAccount = new InboundEmail();
                                        $inboundEmailAccount->retrieve($temp_request['inbound_email_id']);

                                        $emailBean->save();
                                        $emailBean->saved_attachments = handleMultipleFileAttachments($temp_request, $emailBean);
                                        
                                        // parse and replace bean variables
                                        $emailBean = replaceEmailVariables($emailBean, $temp_request);
                                        
                                        // Signature
                                        $matthew_id = "8d159972-b7ea-8cf9-c9d2-56958d05485e";
                                        $paul_id    = "61e04d4b-86ef-00f2-c669-579eb1bb58fa";
                                        $user       = new User();
                                        $user->retrieve($matthew_id);
                                        if ($random_number <= 50) { // Matthew 
                                            $emailSignatureId = "4857e8ef-cff5-cefd-9e0b-59f075f61bbe";
                                        } else{
                                            $emailSignatureId = "6157d3e7-7183-8197-ed43-59f03cf9ba9d";
                                        }
                                        
                                        $signature = $user->getSignature($emailSignatureId);
                                        $emailBean->description .= $signature["signature"];
                                        $emailBean->description_html .= $signature["signature_html"];
                                        $emailBean->description .= $live_chat_text;
                                        $emailBean->description_html .= $live_chat_text;
                                        
                                        //thien fix save email khi không có live chat
                                        $emailBean->save();
                                        
                                        if ($temp_request["parent_type"] == "Leads") {
                                            $leadID = $temp_request["parent_id"];
                                            //updateSolargainLead($leadID, $temp_request, $emailBean);
                                        }
                                        
                                        $lead->email_send_id_c     = $emailBean->id;
                                        $lead->email_send_status_c = 'pending';
                                        
                                        $lead->save();
                                        
                                        //thien commnent
                                        // if ($emailBean->send()) {
                                        //     $emailBean->status = 'sent';
                                        //     // Do extended things here
                                        //     // Save note to solargain
                                        //     if($temp_request["parent_type"] == "Leads"){
                                        //         $leadID = $temp_request["parent_id"];
                                        //         updateSolargainLead($leadID, $temp_request, $emailBean);
                                        //     }
                                        //     $emailBean->save();
                                        // } else {
                                        //         if ($emailBean->status !== 'draft') {
                                        //             $emailBean->status = 'send_error';
                                        //             $emailBean->save();
                                        //         } else {
                                        //             $emailBean->status = 'send_error';
                                        //         }
                                        // }

                                        // Send SMS To client
                                        $phone_number = $lead->phone_mobile ? $lead->phone_mobile : $lead->phone_work;
                                        if($phone_number){
                                            $phone_number = preg_replace("/^0/", "+61", preg_replace('/\D/', '', $phone_number));
                                            if(strlen($phone_number) >= 10){
                                                $phone_number = preg_replace("/^61/", "+61", $phone_number);

                                                if(strpos($phone_number, "+61") !== false ){
                                                    $user = new User();
                                                    $user = $user->retrieve($lead->assigned_user_id);
                                                    $message_body = 'Hi '.$lead->first_name.', my name is '.$user->first_name.' from Solargain. I received your request for a Solargain solar/battery quote for your place, I have that you are in '.$lead->primary_address_city.' '.$lead->primary_address_state.'. If you could please reply back with your street address I would be more than happy to assist.  Look forward to your response. Regards, '.$user->first_name;
                                                    // we will not send sms
                                                    // exec("cd ".$sugar_config["message_command_dir"]."; php send-message.php sms ".$phone_number.' "'.$message_body.'"');
                                                }
                                            }
                                        }
                                    } else {
                                        //thien fix
                                        
                                    }
                                    $record_id = $lead->id;
                                    sendDesignRequestToAdmin($record_id);
                                }
                                
                            }
                            
                        }
                    }
                }
                
                fclose($handle);
                if ($lead->id != "") {
                    copy($folder . "/" . $file, $folder . "/backup/" . $file);
                }
                unlink($folder . "/" . $file);
                return;
            } else {
                // error opening the file.
            }
        }
    }
}
custom_readmail();
function updateDesignForSolargainLead($leadID)
{
    $lead = new Lead();
    $lead->retrieve($leadID);
    if (!$lead->solargain_lead_number_c) {
        return;
    }
    
    $solargainLead = $lead->solargain_lead_number_c;
    
    $username = "matthew.wright";
    $password = "MW@pure733";
    
    // Get full json response for Leads
    
    $url = "https://crm.solargain.com.au/APIv2/leads/" . $solargainLead;
    //set the url, number of POST vars, POST data
    
    $curl = curl_init();
    
    curl_setopt($curl, CURLOPT_URL, $url);
    
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
    curl_setopt($curl, CURLOPT_CUSTOMREQUEST, "GET");
    
    curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 0);
    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
    //
    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);
    curl_setopt($curl, CURLOPT_COOKIESESSION, TRUE);
    curl_setopt($curl, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']);
    curl_setopt($curl, CURLOPT_ENCODING, "gzip");
    curl_setopt($curl, CURLOPT_HTTPHEADER, array(
        "Host: crm.solargain.com.au",
        "User-Agent: " . $_SERVER['HTTP_USER_AGENT'],
        "Content-Type: application/json",
        "Accept: application/json, text/plain, */*",
        "Accept-Language: en-US,en;q=0.5",
        "Accept-Encoding:   gzip, deflate, br",
        "Connection: keep-alive",
        "Authorization: Basic " . base64_encode($username . ":" . $password),
        "Referer: https://crm.solargain.com.au/lead/edit/" . $solargainLead,
        "Cache-Control: max-age=0"
    ));
    
    $leadJSON = curl_exec($curl);
    curl_close($curl);
    
    $leadSolarGain = json_decode($leadJSON);
    
    // building Note
    // Logged in user name: Email From name: and email template title 
    $note                   = "Preparing designs and quote for client";
    $leadSolarGain->Notes[] = array(
        "ID" => 0,
        "Type" => array(
            "ID" => 1,
            "Name" => "General",
            "RequiresComment" => true
        ),
        "Text" => $note
    );
    
    $leadSolarGainJSONDecode = json_encode($leadSolarGain, JSON_UNESCAPED_SLASHES);
    //echo $leadSolarGainJSONDecode;die();
    // Save back lead 
    $url                     = "https://crm.solargain.com.au/APIv2/leads/";
    //set the url, number of POST vars, POST data
    $curl                    = curl_init();
    curl_setopt($curl, CURLOPT_URL, $url);
    //curl_setopt($curl, CURLOPT_USERPWD, $username . ":" . $password);
    
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
    curl_setopt($curl, CURLOPT_POST, 1);
    
    curl_setopt($curl, CURLOPT_POSTFIELDS, $leadSolarGainJSONDecode);
    
    curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 0);
    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
    //
    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);
    curl_setopt($curl, CURLOPT_COOKIESESSION, TRUE);
    curl_setopt($curl, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']);
    curl_setopt($curl, CURLOPT_HTTPHEADER, array(
        "Host: crm.solargain.com.au",
        "User-Agent: " . $_SERVER['HTTP_USER_AGENT'],
        "Content-Type: application/json",
        "Accept: application/json, text/plain, */*",
        "Accept-Language: en-US,en;q=0.5",
        "Accept-Encoding:   gzip, deflate, br",
        "Connection: keep-alive",
        "Content-Length: " . strlen($leadSolarGainJSONDecode),
        "Authorization: Basic " . base64_encode($username . ":" . $password),
        "Referer: https://crm.solargain.com.au/lead/edit/" . $solargainLead
    ));
    
    $lead = json_decode(curl_exec($curl));
    curl_close($curl);
}

function getLatLong($address)
{
    
    $array = array();
    $geo   = file_get_contents('https://maps.googleapis.com/maps/api/geocode/json?address=' . urlencode($address) . '&sensor=false');
    
    // We convert the JSON to an array
    $geo = json_decode($geo, true);
    
    // If everything is cool
    if ($geo['status'] = 'OK') {
        $latitude  = $geo['results'][0]['geometry']['location']['lat'];
        $longitude = $geo['results'][0]['geometry']['location']['lng'];
        $array     = array(
            'lat' => $latitude,
            'lng' => $longitude
        );
    }
    
    return $array;
}

function sendDesignRequestToAdmin($record_id)
{

    $lead = new Lead();
    $lead = $lead->retrieve($record_id);

    if($lead->id == ''){
        return;
    }

    $description =  $lead->description;

    $address     =  $lead->primary_address_street . ", " . 
                    $lead->primary_address_city   . ", " . 
                    $lead->primary_address_state  . ", " . 
                    $lead->primary_address_postalcode ;
    $lat_long = getLatLong($address);

    $from_address = "Matthew Wright - PureElectric &lt;matthew.wright@pure-electric.com.au&gt;";
    $temp_request = array(
        "module" => "Emails",
        "action" => "send",
        "record" => "",
        "type" => "out",
        "send" => 1,
        "inbound_email_id" => "81e9e608-9534-1461-525a-59afe6167eaf",
        "emails_email_templates_name" => "Solar Design Request",
        "emails_email_templates_idb" => "4e3a5016-36d2-b85f-aa20-5b10b5756a16",
        //"emails_email_templates_idb" => "18a02801-a21c-c288-bcd7-5b10427edfc3",
        "parent_type" => "Leads",
        "parent_name" => $lead->first_name ." ". $lead->last_name,
        "parent_id" => $lead->id,
        "from_addr" => $from_address,
        "to_addrs_names" => "admin@pure-electric.com.au", //"binhdigipro@gmail.com",//$lead->email1,
        "cc_addrs_names" => "info@pure-electric.com.au",
        "bcc_addrs_names" => "binh.nguyen@pure-electric.com.au",
        "is_only_plain_text" => false,
        "address" =>$address,
        "lat_long" =>$lat_long,
        "description" => $description,
      
        
    );
    $emailBean = new Email();
    $emailBean = $emailBean->populateBeanFromRequest($emailBean, $temp_request);
    $inboundEmailAccount = new InboundEmail();
    $inboundEmailAccount->retrieve($temp_request['inbound_email_id']);
    $emailBean->save();
    $emailBean->saved_attachments = handleMultipleFileAttachments($temp_request, $emailBean);

    // parse and replace bean variables
    $emailBean = replaceEmailVariables($emailBean, $temp_request);
    $emailBean->save();

    updateDesignForSolargainLead($record_id);
    $lead->email_send_design_request_id_c = $emailBean->id;
    $lead->email_send_design_status_c = 'pending';
    $lead->save();

    return $emailBean;
}

die();

 function send_listLookupNotReplyEmail($data){
    require_once('include/SugarPHPMailer.php');
    $emailObj = new Email();
    $defaults = $emailObj->getSystemDefaultEmail();
    $mail = new SugarPHPMailer();
    $mail->setMailerForSystem();
    $mail->From = $defaults['email'];
    $mail->FromName = $defaults['name'];
    $mail->IsHTML(true);
    $mail->Subject = 'Lookup Not Reply Email';
    
    //Body Email

    $body_email = '<div dir="ltr">
    Dear ' . $assigned_user_name .',<br/>
    This is the list of email that you didn\'t reply: <br/>';
    foreach($data as $result){

        $lead = new Lead();
        $lead = $lead->retrieve($result['parent_id']);

        $email_lead = new Email();
        $email_lead =  $email_lead->retrieve($result['id']);

        $body_email .= '<span>+ </span><a target="_blank" href="https://suitecrm.pure-electric.com.au/index.php?action=DetailView&module=Leads&record=' . $lead->id . '">['.$lead->first_name.' '.$lead->last_name.']</a>';
        
        $assigned_by = '';
        if($lead->assigned_user_id == "8d159972-b7ea-8cf9-c9d2-56958d05485e"){ // Matthew
            $assigned_by = "Matthew Wright";
        }elseif($lead->assigned_user_id == "61e04d4b-86ef-00f2-c669-579eb1bb58fa"){
            $assigned_by = "Paul Szuster";
        }
        $body_email .= ' <a target="_blank" href="https://mail.google.com/#search/'.$lead->email1.'">[GM Search]</a>';
        $body_email .= '. Assigned: '.$assigned_by.'. Date: ' .date("d/m/Y H:i:s", strtotime($result['date_entered']));

        $body_email .= ' <a href="#">Ignore</a><br/>';
        $email_content =  preg_replace('/CRM Links:(.+?)End CRM Links/s', '', strip_tags($email_lead->description_html));

        $body_email .= '<span>   - Content: </span><span style="font-size:12px;font-style: italic;">'.substr($email_content,0,150).trim().'...</span><br/>';
    }
    
    $body_email .= '</div>';

    $mail->Body = $body_email;
    //END  Body Email

    $mail->prepForOutbound();
    $mail->AddAddress('thienpb89@gmail.com');
    $mail->AddAddress('binhdigipro@gmail.com');
    $sent = $mail->Send();
}
function custom_lookupNotReplyEmail(){
    date_default_timezone_set('Africa/Lagos');
    set_time_limit(0);
    ini_set('memory_limit', '-1');
    $db = DBManagerFactory::getInstance();
    $query =   "SELECT emails.id, emails.date_entered, emails.parent_id, emails.deleted, emails.`status` 

    FROM `leads`
     JOIN emails ON emails.parent_id = leads.id
     JOIN leads_cstm ON emails.parent_id = leads_cstm.id_c
    
     JOIN 
    (
        SELECT MAX(emails.date_entered) AS date_entered , emails.parent_id
    
    FROM `leads`
     JOIN emails ON emails.parent_id = leads.id
     JOIN leads_cstm ON emails.parent_id = leads_cstm.id_c
     
    WHERE 1 = 1  
    AND emails.`parent_type` = 'Leads' 
    AND emails.date_entered <= DATE_ADD(CURDATE(), INTERVAL -1 DAY) 
    AND leads.status NOT IN ('Lost_Competitor','Lost_Uncontactable','Lost_Unsuitable_Roof','Lost_Enquiry_Only','Lost_No_Longer_Interested','Lost_Outside_Service_Area','Lost_Duplicate','Lost_Council','Lost_Reassigned_To_Solorgain')
    AND (leads_cstm.ignore_lead_c != 1 OR leads_cstm.ignore_lead_c IS NULL)   
    AND emails.deleted = 0
      
    GROUP BY emails.parent_id
    ORDER BY `emails`.`date_entered` DESC
        ) result_table ON result_table.parent_id = emails.parent_id AND result_table.date_entered = emails.date_entered
         
         
         
         
    WHERE 1 = 1 
    AND emails.`parent_type` = 'Leads' 
    AND emails.date_entered <= DATE_ADD(CURDATE(), INTERVAL -1 DAY) 
    AND leads.status NOT IN ('Lost_Competitor','Lost_Uncontactable','Lost_Unsuitable_Roof','Lost_Enquiry_Only','Lost_No_Longer_Interested','Lost_Outside_Service_Area','Lost_Duplicate','Lost_Council','Lost_Reassigned_To_Solorgain')
    AND (leads_cstm.ignore_lead_c != 1 OR leads_cstm.ignore_lead_c IS NULL)   
    AND emails.deleted = 0
    
    AND emails.status = 'received'
        
    ORDER BY `emails`.`date_entered` DESC";
    $ret = $db->query($query);
    $data = array();
    $i = 0;
    while($row = $db->fetchByAssoc($ret)){
        if($row['status'] == 'received' && $i < 50){
            $data[] = $row;
            $i++;
        }
        
    }

    send_listLookupNotReplyEmail($data);
}

custom_lookupNotReplyEmail();

die();
// Uopdate lead that have Design document sent 
$db =  DBManagerFactory::getInstance();
$query = "
    SELECT DISTINCT(leads.id) , leads_cstm.time_completed_job_c  FROM leads  
        INNER JOIN leads_cstm ON leads.id = leads_cstm.id_c 
        INNER JOIN emails ON emails.parent_id = leads.id
        INNER JOIN notes ON notes.parent_id = emails.id
        WHERE 
            leads.deleted = 0 
            AND (leads_cstm.time_sent_to_client_c IS NULL OR leads_cstm.time_sent_to_client_c = '') 
            AND (emails.parent_type = 'Leads')
            AND (notes.parent_type = 'Emails')
            AND (LOWER(notes.filename) LIKE LOWER('%Design_%') OR LOWER(notes.filename) LIKE LOWER('%Quote_%'))
        ";
$result = $db->query($query);
//  var_dump($result);die();
$array_lead = [];
while ($row = $db->fetchByAssoc($result)) {
        //array_push($array_lead,$row['id']);
        update_data_time_sent_client($row['id'],$row['time_completed_job_c']);
        echo "<br><a target='_blank' href='/index.php?module=Leads&offset=81&stamp=1547698793066230500&return_module=Leads&action=EditView&record=" .$row['id'] ."'>open lead updated</a>";

}
// var_dump($array_lead);

function update_data_time_sent_client($record_id,$time_com_job){
    if(!isset($time_com_job) || $time_com_job == ''){
        $time_com_job = '2019-01-01 08:00:00';
    }
    $db = DBManagerFactory::getInstance();
    $query = " UPDATE leads_cstm SET time_sent_to_client_c = '$time_com_job' WHERE id_c='$record_id' ";
    $result = $db->query($query);
}
die();

// Update toan bo lead ma co quote da dc convert to invoice tren SG
// Update all lead that have SG quote converted to invoice
$db = DBManagerFactory::getInstance();
$query = "SELECT leads.id as id,time_completed_job_c,solargain_quote_number_c,solargain_tesla_quote_number_c ,date_entered
FROM leads INNER JOIN leads_cstm  ON leads.id = leads_cstm.id_c 
WHERE 
     (leads_cstm.time_sent_to_client_c IS NULL OR leads_cstm.time_sent_to_client_c = '') 
    AND ( (leads_cstm.solargain_quote_number_c IS NOT NULL AND leads_cstm.solargain_quote_number_c != '') OR  (leads_cstm.solargain_tesla_quote_number_c IS NOT NULL AND leads_cstm.solargain_tesla_quote_number_c != '') )
    AND leads.deleted = 0
";
$result = $db->query($query);
var_dump($result);
$array_lead = [];
while ($row = $db->fetchByAssoc($result)) {
    $check_status_quote = check_status_quote_SAM($row['solargain_quote_number_c']);
    $check_status_tesla = check_status_quote_SAM($row['solargain_tesla_quote_number_c']);
    //echo '<br>hihi: ' .$row['id'] .'---status: ' .$check_status .'<br>' .$row['solargain_quote_number_c'];
    if( $check_status_quote == 'Converted To Order' || $check_status_tesla == 'Converted To Order'){
        //array_push($array_lead,$row['id']);
        update_data_time_sent_client($row['id'],$row['time_completed_job_c']);
        echo "<br><a target='_blank' href='/index.php?module=Leads&offset=81&stamp=1547698793066230500&return_module=Leads&action=EditView&record=" .$row['id'] ."'>open lead updated</a>";
    }
}
// var_dump($array_lead);

/*function update_data_time_sent_client($record_id,$time_com_job){
    if($time_com_job != "") {
    }else {
        $time_com_job = "30/12/2018 11:00";
    }
    $db = DBManagerFactory::getInstance();
    $query = " UPDATE leads_cstm SET time_sent_to_client_c = '$time_com_job' WHERE id_c='$record_id' ";
    $result = $db->query($query);
}
*/
// print_r(check_status_quote_SAM('94246'));
function check_status_quote_SAM($number_quote){
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, "https://crm.solargain.com.au/apiv2/quotes/$number_quote");
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "GET");
    curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');
    $headers = array();
    $headers[] = "Pragma: no-cache";
    $headers[] = "Accept-Encoding: gzip, deflate, br";
    $headers[] = "Accept-Language: en-US,en;q=0.9";
    $headers[] = "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36";
    $headers[] = "Accept: application/json, text/plain, */*";
    $headers[] = "Referer: https://crm.solargain.com.au/order/edit/30962";
    $headers[] = "Authorization: Basic bWF0dGhldy53cmlnaHQ6TVdAcHVyZTczMw==";
    $headers[] = "Cookie: SL_GWPT_Show_Hide_tmp=1; SL_wptGlobTipTmp=1";
    $headers[] = "Connection: keep-alive";
    $headers[] = "Cache-Control: no-cache";
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

    $result = curl_exec($ch);
    curl_close ($ch);
    $json_result = json_decode($result);
    return $json_result->Status->Description;
}

die();

$db =  DBManagerFactory::getInstance();
$sql = "
        SELECT * FROM aos_invoices iv LEFT JOIN aos_invoices_cstm cstm ON iv.id = cstm.id_c WHERE 
            (cstm.sanden_tank_serial_c IS NOT NULL AND cstm.sanden_tank_serial_c != '')
            OR (cstm.sanden_hp_serial_c IS NOT NULL AND cstm.sanden_hp_serial_c != '') 
            
        ";
echo $sql;
$ret = $db -> query($sql);
if($ret->num_rows > 0){
    while($row = $ret ->fetch_assoc()){
        echo $row['id']."<br>";
        $invoice = new AOS_Invoices();
        $invoice->retrieve($row['id']);
        if(isset($invoice->id) && $invoice->id != ""){
            $invoice->save();
        }
    }
}
die();

$db = DBManagerFactory::getInstance();
$sql_set_count = "SET @count = 0;";
$result = $db->query($sql_set_count);
$sql_number = "UPDATE tasks SET number = @count:=@count+1 ORDER BY date_entered ASC ";
$result = $db->query($sql_number);

die(); 

$db = DBManagerFactory::getInstance();
$sql = "SELECT leads.id as id ,
leads_cstm.solargain_quote_number_c ,
leads_cstm.solargain_tesla_quote_number_c,
leads.last_name as last_name ,
    leads.first_name as first_name ,
    leads.primary_address_street as primary_address_street ,
    leads.primary_address_city as primary_address_city ,
    leads.primary_address_state as primary_address_state ,
    leads.primary_address_postalcode as primary_address_postalcode ,
    leads.primary_address_country as primary_address_country ,
    leads.account_name as account_name,
    leads.account_id as account_id,
    leads.assigned_user_id as assigned_user_id,
    leads.lead_source as lead_source
FROM leads 
INNER JOIN leads_cstm ON leads_cstm.id_c = leads.id
WHERE 
    1 = 1
    AND (leads.opportunity_id = '' OR leads.opportunity_id is NULL) 
    AND (leads.status = 'New' OR leads.status = 'Assigned' OR leads.status = 'In Process') 
    AND (leads_cstm.create_opportunity_number_c = '' OR leads_cstm.create_opportunity_number_c IS NULL)
    AND (leads_cstm.create_opportunity_c = '' OR leads_cstm.create_opportunity_c IS NULL)
    AND (leads_cstm.create_opportunity_number_c = '' OR leads_cstm.create_opportunity_number_c IS NULL)
    AND ((leads_cstm.solargain_quote_number_c != '' AND leads_cstm.solargain_quote_number_c IS NOT NULL)
    OR (leads_cstm.solargain_tesla_quote_number_c != '' AND leads_cstm.solargain_tesla_quote_number_c IS NOT NULL))
    AND leads.deleted = 0

";
// echo $sql;die();
$result = $db->query($sql);
//print_r($result);
while ($row = $db->fetchByAssoc($result)) {
    //create account 
    if($row['account_id'] == '') {
        $account = new Account();
        $account->name = $row['first_name'] ." " . $row['last_name'];
        $account->billing_address_street =  $row['billing_address_street'];
        $account->billing_address_city =  $row['billing_address_city'];
        $account->billing_address_state =  $row['billing_address_state'];
        $account->billing_address_postalcode =  $row['billing_address_postalcode'];
        $account->billing_address_country =  $row['billing_address_country'];
        $account->assigned_user_id = $row['assigned_user_id'];
        $account->save();
    }else {
        $account = new Account();
        $account->retrieve($row['account_id']);
    }
    //create account
    $opportunity = new Opportunity();
    $opportunity->name = $row['last_name'] .' ' . $row['primary_address_city'].' Solar';
    $opportunity->assigned_user_id = $row['assigned_user_id'];
    $opportunity->account_name = $account->name;
    $opportunity->account_id = $account->id;
    $opportunity->amount = 600;//$bean->opportunity_amount;
    $opportunity->sales_stage = 'Negotiation/Review';
    $opportunity->lead_source = $row['lead_source'];
    $date = new DateTime('+1 day');
    $opportunity->date_closed = $date->format('Y-m-d');
    $opportunity->save();
    //update lead
    $sql_update = "UPDATE  leads
    SET leads.opportunity_id ='" .$opportunity->id
     ."', leads.account_name ='" .$account->name
     ."', leads.account_id ='" .$account->id
     ."', leads.status ='Converted' WHERE leads.id = '" .$row['id'] ."'";
    $result1 = $db->query( $sql_update);

    $sql_update = "UPDATE leads_cstm 
    SET leads_cstm.create_solar_number_c = '" .$opportunity->id 
    ."' WHERE id_c = '" .$row['id'] ."'";
    $result2 = $db->query( $sql_update);

    echo '<br> Lead id:';
   echo $row['id'];
   echo '<br> Opportunity id:';
   echo $opportunity->id;
}

die();

$db =  DBManagerFactory::getInstance();
$sql = "SELECT * FROM aos_invoices iv LEFT JOIN aos_invoices_cstm cstm ON iv.id = cstm.id_c WHERE (cstm.sanden_tank_serial_c IS NOT NULL AND cstm.sanden_tank_serial_c != '')";
echo $sql;
$ret = $db -> query($sql);
if($ret->num_rows > 0){
    while($row = $ret ->fetch_assoc()){
        if($row["sanden_tank_serial_c"]!= ""){
            echo "invoice id: ". $row ['id']."<br>";
            echo "old serial: ". $row['sanden_tank_serial_c']."<br>";
            $id     = $row ['id'];
            $number = str_replace("-","",$row['sanden_tank_serial_c']);
            $sql_update = "UPDATE aos_invoices_cstm
            SET sanden_tank_serial_c = '$number'
            WHERE id_c = '$id '
            ";
            echo $number."<br>";
            $db->query($sql_update);
        }
        
    }
}
die();

$db = DBManagerFactory::getInstance();
    
$sql = "SELECT * FROM pe_stock_items st
        LEFT JOIN  pe_stock_items_cstm stcstm ON st.id = stcstm.id_c
";

$ret = $db->query($sql);
while ($row = $db->fetchByAssoc($ret)) {
    $pe_warehouse_log = new pe_warehouse_log();
    $pe_warehouse_log -> retrieve($row['parent_id']);
    if($pe_warehouse_log->id != ""){
        
        if ($pe_warehouse_log->load_relationship('pe_warehouse_log_pe_warehouse')) {
            $warehouse = $pe_warehouse_log->pe_warehouse_log_pe_warehouse->getBeans();
            if($warehouse != false){
                $stock_item = new pe_stock_items();
                $stock_item->retrieve($row['id']);
                if($stock_item->id != ""){
                    $stock_item-> load_relationship('pe_warehouse_pe_stock_items_1');
                    $stock_item->pe_warehouse_pe_stock_items_1->add($warehouse);
                    $stock_item->save();
                }
                echo $stock_item->id.'<br>';
            }
        }
    }
}

die();

$db = DBManagerFactory::getInstance();
$sql_query =  "SELECT * FROM `pe_warehouse_log` WHERE `purchaseorder_id` != ''";
$result = $db->query($sql_query);
$i=0;
while($row = $db->fetchByAssoc($result)){
    $id = create_guid();
    $date  = date('Y-m-d H:s:i');
    $deleted = $row['deleted'];
    $po_id = $row['purchaseorder_id'];
    $warehouse_log_id = $row['id'];
    $sql_update = "INSERT INTO po_purchase_order_pe_warehouse_log_1_c (id, date_modified, deleted, po_purchase_order_pe_warehouse_log_1po_purchase_order_ida, po_purchase_order_pe_warehouse_log_1pe_warehouse_log_idb) 
                    VALUES ('$id', '$date' , '$deleted', '$po_id', '$warehouse_log_id')";
    $db->query($sql_update);
}

die();

$db = DBManagerFactory::getInstance();
    
$sql = "SELECT * FROM pe_stock_items st
LEFT JOIN  aos_invoices_cstm inv ON 
                                    inv.sanden_tank_serial_c = st.serial_number 
                                    OR inv.sanden_hp_serial_c = st.serial_number
WHERE 1=1 AND st.serial_number != '' AND inv.id_c != ''
";

$ret = $db->query($sql);
while ($row = $db->fetchByAssoc($ret)) {
    if($row["id"] != ""){
        /*$stock_item = new pe_stock_items();
        $stock_item->retrieve($row["id"]);
        if($stock_item->id != ""){
            $stock_item->aos_invoices_id_c = $bean->id;
            $stock_item->save();
        }*/

        // Update query
        $sql = "UPDATE pe_stock_items_cstm
                SET aos_invoices_id_c = '".$row['id_c']."'
                WHERE id_c = '".$row["id"]."'
                ";
                echo  $sql ."<br>" ;
                echo $row["id"]."<br>";
    }
}

die();

$db = DBManagerFactory::getInstance();
    $sql_set_count = "SET @count = 0;";
    $result = $db->query($sql_set_count);
    $sql_number_whlog = "UPDATE pe_warehouse_log SET number = @count:=@count+1 ORDER BY date_entered ASC";
    $result = $db->query($sql_number_whlog);

die(); 

require_once 'modules/SchedulersJobs/SchedulersJob.php';
$timedate =new TimeDate();
function create_dae($year=null, $mnth=null, $day=null)
{
    global $timedate;
    $now = $timedate->getNow();
    if ($day==null) {
        $day=$now->day+mt_rand(0, 365);
    }
    return $timedate->asDbDate($now->get_day_begin($day, $mnth, $year));
}
$sched2 = new Scheduler();
$sched2->name               = 'LBL_OOTB_REPORTS';
$sched2->job                = 'function::aorRunScheduledReports';
$sched2->date_time_start    = create_dae(2015, 1, 1) . ' ' . create_dae(0, 0, 1);
$sched2->date_time_end      = null;
$sched2->job_interval       = '*::*::*::*::*';
$sched2->status             = 'Active';
$sched2->created_by         = '1';
$sched2->modified_user_id   = '1';
$sched2->catch_up           = '1';
$sched2->save();
die();

function aorRunScheduledReports(){ 
    require_once 'include/SugarQueue/SugarJobQueue.php';
    $date = new DateTime();//Ensure we check all schedules at the same instant
    foreach(BeanFactory::getBean('AOR_Scheduled_Reports')->get_full_list() as $scheduledReport){

        if($scheduledReport->status == 'active' && $scheduledReport->shouldRun($date)){
            if(empty($scheduledReport->aor_report_id)){
                continue;
            }
            $job = new SchedulersJob();
            $job->name = "Scheduled report - {$scheduledReport->name} on {$date->format('c')}";
            $job->data = $scheduledReport->id;
            $job->target = "class::AORScheduledReportJob";
            $job->assigned_user_id = 1;
            $jq = new SugarJobQueue();
            $jq->submitJob($job);
        }
    }
}
aorRunScheduledReports();
