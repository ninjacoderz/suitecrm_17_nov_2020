<?php 
array_push($job_strings, 'custom_autosendgeoemail');
require_once('custom/include/SugarFields/Fields/Multiupload/simple_html_dom.php');

function custom_autosendgeoemail(){
    date_default_timezone_set('UTC');
    set_time_limit(0);
    ini_set('memory_limit', '-1');

    $db  = DBManagerFactory::getInstance();
    
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, 'https://cognito-idp.ap-southeast-2.amazonaws.com/');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, '{"AuthFlow":"USER_PASSWORD_AUTH","ClientId":"1r8f4rahaq3ehkastcicb70th4","AuthParameters":{"USERNAME":"accounts@pure-electric.com.au","PASSWORD":"gPureandTrue2019*"},"ClientMetadata":{}}');
    curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');
    $headers = array();
    $headers[] = 'Authority: cognito-idp.ap-southeast-2.amazonaws.com';
    $headers[] = 'Pragma: no-cache';
    $headers[] = 'Cache-Control: no-cache';
    $headers[] = 'Origin: https://geocreation.com.au';
    $headers[] = 'X-Amz-Target: AWSCognitoIdentityProviderService.InitiateAuth';
    $headers[] = 'X-Amz-User-Agent: aws-amplify/0.1.x js';
    $headers[] = 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36';
    $headers[] = 'Content-Type: application/x-amz-json-1.1';
    $headers[] = 'Accept: */*';
    $headers[] = 'Sec-Fetch-Site: cross-site';
    $headers[] = 'Sec-Fetch-Mode: cors';
    $headers[] = 'Referer: https://geocreation.com.au/';
    $headers[] = 'Accept-Encoding: gzip, deflate, br';
    $headers[] = 'Accept-Language: en-US,en;q=0.9';
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    $result = curl_exec($ch);
    $result_data = json_decode($result);
    $accesstoken =  $result_data->AuthenticationResult->AccessToken;
    $RefreshToken = $result_data->AuthenticationResult->RefreshToken;

    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, 'https://cognito-idp.ap-southeast-2.amazonaws.com/');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, '{"AccessToken":'.$accesstoken.'"}');
    curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');
    $headers = array();
    $headers[] = 'Authority: cognito-idp.ap-southeast-2.amazonaws.com';
    $headers[] = 'Pragma: no-cache';
    $headers[] = 'Cache-Control: no-cache';
    $headers[] = 'Origin: https://geocreation.com.au';
    $headers[] = 'X-Amz-Target: AWSCognitoIdentityProviderService.GetUser';
    $headers[] = 'X-Amz-User-Agent: aws-amplify/0.1.x js';
    $headers[] = 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36';
    $headers[] = 'Content-Type: application/x-amz-json-1.1';
    $headers[] = 'Accept: */*';
    $headers[] = 'Sec-Fetch-Site: cross-site';
    $headers[] = 'Sec-Fetch-Mode: cors';
    $headers[] = 'Referer: https://geocreation.com.au/';
    $headers[] = 'Accept-Encoding: gzip, deflate, br';
    $headers[] = 'Accept-Language: en-US,en;q=0.9';
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    $result = curl_exec($ch);
    curl_close($ch);


    $param = array (
        'ClientId' => '1r8f4rahaq3ehkastcicb70th4',
        'AuthFlow' => 'REFRESH_TOKEN_AUTH',
        'AuthParameters' => 
        array (
        'REFRESH_TOKEN' => $RefreshToken,
        'DEVICE_KEY' => NULL,
        ),
    );

    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, 'https://cognito-idp.ap-southeast-2.amazonaws.com/');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($param));
    curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');
    $headers = array();
    $headers[] = 'Authority: cognito-idp.ap-southeast-2.amazonaws.com';
    $headers[] = 'Pragma: no-cache';
    $headers[] = 'Cache-Control: no-cache';
    $headers[] = 'Origin: https://geocreation.com.au';
    $headers[] = 'X-Amz-Target: AWSCognitoIdentityProviderService.InitiateAuth';
    $headers[] = 'X-Amz-User-Agent: aws-amplify/0.1.x js';
    $headers[] = 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36';
    $headers[] = 'Content-Type: application/x-amz-json-1.1';
    $headers[] = 'Accept: */*';
    $headers[] = 'Sec-Fetch-Site: cross-site';
    $headers[] = 'Sec-Fetch-Mode: cors';
    $headers[] = 'Referer: https://geocreation.com.au/';
    $headers[] = 'Accept-Encoding: gzip, deflate, br';
    $headers[] = 'Accept-Language: en-US,en;q=0.9';
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    $result = curl_exec($ch);
    curl_close($ch);

    $IdToken =  $result_data->AuthenticationResult->IdToken;

    // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
    $ch = curl_init();

    curl_setopt($ch, CURLOPT_URL, 'https://api.greenenergytrading.com.au/api/assignments/search?filters%5BhasIssuedAgreements%5D=true&page=1');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');

    curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');

    $headers = array();
    $headers[] = 'Authority: api.greenenergytrading.com.au';
    $headers[] = 'Accept: application/json, text/plain, */*';
    $headers[] = 'Authorization: token '.$IdToken;
    $headers[] = 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36';
    $headers[] = 'Origin: https://geocreation.com.au';
    $headers[] = 'Sec-Fetch-Site: cross-site';
    $headers[] = 'Sec-Fetch-Mode: cors';
    $headers[] = 'Sec-Fetch-Dest: empty';
    $headers[] = 'Referer: https://geocreation.com.au/';
    $headers[] = 'Accept-Language: vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5';
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

    $result = curl_exec($ch);
    if (curl_errno($ch)) {
        echo 'Error:' . curl_error($ch);
    }
    curl_close($ch);

    if($result != false){
        $result = json_decode($result);
        $issue_id_arr = array();
        $email_type = array();

        //thienpb fix logic for sh
        if(isset($result->assignment)){
            foreach($result->assignment as $ret){
                //filter issued has email assign to accounts@pure-electric.com.au
                if($ret->commonSection->email != 'accounts@pure-electric.com.au') {
                    array_push( $issue_id_arr,$ret->reference);
                }
            }
            if(count($issue_id_arr) >0){
                foreach ($issue_id_arr as $issue_id){
                    if(strpos($issue_id,'SH') !== false){
                        
                        // Get JSON of assignment by assignment ID
                        $curl = curl_init();
                        $url = 'https://api.greenenergytrading.com.au/api/assignments/'.$issue_id;
                        curl_setopt($curl, CURLOPT_URL, $url);
                        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
                        curl_setopt($curl, CURLOPT_CUSTOMREQUEST, "GET");

                        curl_setopt($curl, CURLOPT_ENCODING, 'gzip, deflate');
                        curl_setopt($curl, CURLOPT_USERAGENT,  $_SERVER['HTTP_USER_AGENT']);
                        curl_setopt($curl, CURLOPT_HTTPHEADER, array(
                               
                                "User-Agent: ". $_SERVER['HTTP_USER_AGENT'],
                                "Content-type: application/json; charset=UTF-8",
                                "Accept: */*",
                                "Accept-Language: en-US,en;q=0.5",
                                "Accept-Encoding:   gzip, deflate, br",
                                "Connection: keep-alive",
                                "Authorization: token ".$IdToken,
                                "Referer: https://geocreation.com.au/assignments/$issue_id/edit",
                                "Origin: https://geocreation.com.au",
                            )
                        );
                        $result = curl_exec($curl);
                        curl_close ($curl);

                        $result = json_decode($result);
                        $assignment_byID = $result->assignment->result;
                        
                        if(count($assignment_byID->agreements) > 1){
                            if($assignment_byID->agreements[0]->templateName == "System Owner" ){
                                if($assignment_byID->agreements[1]->status == 'accepted'){
                                    //mail cho owner
                                    $email_type[$issue_id] = 'owner';
                                    continue;
                                }else{
                                    //mail cho installer
                                    $email_type[$issue_id] = 'installer';
                                    continue;
                                }
                            }else{
                                if($assignment_byID->agreements[0]->status == 'accepted'){
                                    //mail cho owner
                                    $email_type[$issue_id] = 'owner';
                                    continue;
                                }else{
                                    $email_type[$issue_id] = 'installer';
                                    //mail cho installer
                                    continue;
                                }
                            }
                        }else{
                            $email_type[$issue_id] = 'owner';
                            // mail cho owner
                            continue;
                        }
                    }else{

                          // Get JSON of assignment by assignment ID
                          $curl = curl_init();
                          $url = 'https://api.greenenergytrading.com.au/api/assignments/'.$issue_id;
                          curl_setopt($curl, CURLOPT_URL, $url);
                          curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
                          curl_setopt($curl, CURLOPT_CUSTOMREQUEST, "GET");
  
                          curl_setopt($curl, CURLOPT_ENCODING, 'gzip, deflate');
                          curl_setopt($curl, CURLOPT_USERAGENT,  $_SERVER['HTTP_USER_AGENT']);
                          curl_setopt($curl, CURLOPT_HTTPHEADER, array(
                                
                                  "User-Agent: ". $_SERVER['HTTP_USER_AGENT'],
                                  "Content-type: application/json; charset=UTF-8",
                                  "Accept: */*",
                                  "Accept-Language: en-US,en;q=0.5",
                                  "Accept-Encoding:   gzip, deflate, br",
                                  "Connection: keep-alive",
                                  "Authorization: token ".$IdToken,
                                  "Referer: https://geocreation.com.au/assignments/$issue_id/edit",
                                  "Origin: https://geocreation.com.au",
                              )
                          );
                          $result = curl_exec($curl);
                          curl_close ($curl);
  
                          $result = json_decode($result);
                          $assignment_byID = $result->assignment->result;
                          // only send to owner when wh install is accepted and owner is issued
                          $check_condition_installer = true;
                          $check_condition_owner = false;
                          foreach ($assignment_byID->agreements as $key => $agreement) {
                                if($agreement->templateName  == "System Owner" && $agreement->status == 'issued'){
                                    $check_condition_owner = true;
                                }

                                if($agreement->templateName  == "WH Installer" && $agreement->status != 'accepted'){
                                    $check_condition_installer = false;
                                }
                          }

                          if( $check_condition_installer && $check_condition_owner){
                            $email_type[$issue_id] = 'owner';
                          }else{
                            $email_type[$issue_id] = 'installer';
                          }
                       
                    // mail cho owner
                    }
                }

                //code send email

                //code send email
                $query = "SELECT aos_invoices.id,aos_invoices_cstm.stc_aggregator_serial_c,aos_invoices_cstm.geo_email_sent_date_c,aos_invoices_cstm.send_geo_email_status_c FROM aos_invoices INNER JOIN aos_invoices_cstm ON aos_invoices.id = aos_invoices_cstm.id_c
                                                WHERE aos_invoices_cstm.stc_aggregator_serial_c IN ('". implode("','",$issue_id_arr) . "')  
                                                AND  aos_invoices.deleted = 0";
                $db  = DBManagerFactory::getInstance();

                $ret = $db->query($query);
                if($ret->num_rows >0 ){
                    while($row = $db->fetchByAssoc($ret)){
                        if($email_type[$row['stc_aggregator_serial_c']] == 'owner'){
                            if($row['send_geo_email_status_c'] == 'pending'){
                                //send email for owner
                                config_sendGeoEmail($row['id'],'owner');
                            }elseif($row['send_geo_email_status_c'] == 'sent'){
                                if(is_null($row['send_geo_email_status_c']) || $row['send_geo_email_status_c'] == ''){
                                    continue;
                                }
                                if((time() - strtotime($row['geo_email_sent_date_c']))/60/60 >= 24){
                                    config_sendGeoEmail($row['id'],'owner');
                                }
                            }
                            
                        }else{
                            //send email for installer
                            // config_sendGeoEmail($row['id'],'installer');
                            config_sendGeoEmail_type_is_installer($row['id'],'installer');
                        }
                    }
                }
                die();
            }
        }
    }
}

function customReplaceEmailVariables(Email $email, $request)
{

    /**
     * @var EmailTemplate $emailTemplate
     */
    $emailTemplate = BeanFactory::getBean(
        'EmailTemplates',
        isset($request['emails_email_templates_idb']) ?
            $request['emails_email_templates_idb'] :
            null
    );
    //thienpb fix here
    $emailTemplate->subject = str_replace("STCs/VEECs",$request['geo_name'],$emailTemplate->subject);
    $emailTemplate->subject = str_replace("\$productType",$request['productType'],$emailTemplate->subject);
    $emailTemplate->subject = str_replace("\$aos_invoices_name",$request['aos_invoices_name'],$emailTemplate->subject);

    $emailTemplate->body = str_replace("STCs/VEECs",$request['geo_name'],$emailTemplate->body);
    $emailTemplate->body_html = str_replace("STCs/VEECs",$request['geo_name'],$emailTemplate->body_html);

    $email->name = $emailTemplate->subject;
    $email->description_html = $emailTemplate->body_html;
    $email->description = $emailTemplate->body;

   
    
    $email->description_html = str_replace("\$lead_first_name", $request['lead_first_name'] , $email->description_html);
    $email->description_html = str_replace("\$productType", $request['productType'] , $email->description_html);

    $email->description = strip_tags($email->description_html);

    return $email;
}

function config_sendGeoEmail($invoice_id,$email_type){

    $account_id = '';
    $product_type = '';
    $from_address = '';
    $db  = DBManagerFactory::getInstance();


    $invoice = new AOS_Invoices();
    $invoice->retrieve($invoice_id);

    if(!isset($invoice->id) || $invoice->id == "") {
        die();
    }


    $from_address = "PureElectric Accounts - PureElectric &lt;accounts@pure-electric.com.au&gt;";

    $account = new Account();
    if($account_id == "") {
        $account_id = $invoice->billing_account_id;
    }
    $account = $account->retrieve($account_id);

    //thienpb get product name and compare

    $sql = "SELECT aos_products_quotes.name FROM aos_products_quotes WHERE parent_type = 'AOS_Invoices' AND parent_id = '".$invoice->id."' AND deleted = 0";
    $result = $db->query($sql);

    $isSTC = false;
    $isVEEC = false;
    $geo_name = '';
    while($row = $db->fetchByAssoc($result)){
        if(strpos($row['name'],'STC') !== false){
            $isSTC = true;
        }
        if(strpos($row['name'],'VEEC') !== false){
            $isVEEC = true;
        }
    }

    if($isSTC == true && $isVEEC == true){
        $geo_name = "STCs/VEECs";
    }else if($isSTC){
        $geo_name = "STCs";
    }else if($isVEEC){
        $geo_name = "VEECs";
    }else{
        $geo_name ='';
    }
    //end
    $sea = new SugarEmailAddress; 
    // Grab the primary address for the given record represented by the $bean object
    $primary = $sea->getPrimaryAddress($account);

    //thien fix
    $query_groupname = "SELECT aos_line_item_groups.name FROM aos_line_item_groups WHERE parent_id = '".$invoice_id."' AND deleted = 0 LIMIT 1";
    $ret_groupname = $db->query($query_groupname);
    if($ret_groupname->num_rows >0){
        $row_groupname = $db->fetchByAssoc($ret_groupname);
        $productType = strtolower($row_groupname['name']);
        
        if(strpos($productType,'sanden') !== false){
            $product_type = 'Sanden';
        }else if(strpos($productType,'daikin') !==false){
            $product_type = 'Daikin';
        }else{
            $product_type = '';
        }
    }
    $temp_request = array(
        "module" => "Emails",
        "action" => "send",
        "record" => "",
        "type" => "out",
        "send" => 1,
        "inbound_email_id" => ($invoice->assigned_user_id == "8d159972-b7ea-8cf9-c9d2-56958d05485e") ? "8dab4c79-32d8-0a26-f471-59f1c4e037cf" : "58cceed9-3dd3-d0b5-43b2-59f1c80e3869",
        "emails_email_templates_name" => "CLIENT GEO STCs/VEECs Contractor Email Follow Up",
        "emails_email_templates_idb" => "acd0d03e-e494-d298-79ce-5a057236fb84",
        "parent_type" => "Accounts",
        "parent_name" => $account->name,
        "parent_id" => $account->id,
        "from_addr" => $from_address,
        "to_addrs_names" => $account->name . "  <".$primary.">",//"binhdigipro@gmail.com",//$lead->email1,
        "cc_addrs_names" => "info@pure-electric.com.au",
        "bcc_addrs_names" => "binh.nguyen@pure-electric.com.au, paul.szuster@pure-electric.com.au, matthew.wright@pure-electric.com.au",
        "is_only_plain_text" => false,
        "aos_invoices_name" => $invoice->name,
        "lead_first_name"=> current(explode(' ',$account->name)),
        "geo_name" => $geo_name,
        "productType" => $product_type,
        
    );
    $emailBean = new Email();
    $emailBean = $emailBean->populateBeanFromRequest($emailBean, $temp_request);
    $inboundEmailAccount = new InboundEmail();
    $inboundEmailAccount->retrieve($temp_request['inbound_email_id']);
    
    $emailBean->mailbox_id = "5d586830-8938-efb6-c4a3-5b222cc28889";// Account email;

    // parse and replace bean variables
    $emailBean = customReplaceEmailVariables($emailBean, $temp_request);
    // Signature
    $matthew_id = "8d159972-b7ea-8cf9-c9d2-56958d05485e";
    $paul_id = "61e04d4b-86ef-00f2-c669-579eb1bb58fa";
    
    if($invoice->assigned_user_id != ''){
        $current_user = new User();
        $invoice->retrieve($invoice->assigned_user_id);
        
    }else{
        $current_user->sms_signature_c = '';
    }

    $smsTemplateID = '5fcde64f-63ac-dc94-21fb-5e5ef5cf4c70';
    $smsTemplate = BeanFactory::getBean(
        'pe_smstemplate',
        $smsTemplateID
    );
    
    $contact = new Contact();
    $contact_id = $invoice->billing_contact_id; 
    $contact = $contact->retrieve($contact_id);
    $sms_body =  $smsTemplate->body_c;
    $sms_body = str_replace("\$first_name", $contact->first_name, $sms_body);
    $phone_number = preg_replace("/^0/", "+61", preg_replace('/\D/', '', $contact->phone_mobile));
    $phone_number = preg_replace("/^61/", "+61", $phone_number);
    $emailBean->number_client = $phone_number;
    $emailBean->sms_message = strip_tags(trim(html_entity_decode($sms_body.$current_user->sms_signature_c,ENT_QUOTES)));

    $emailBean->save();
    $description_html_save = $emailBean->description_html;
    $email_edit_link = "<a href='https://suitecrm.pure-electric.com.au/index.php?action=ComposeViewWithPdfTemplate&module=Emails&return_module=AOS_Invoices&return_action=DetailView&return_action=DetailView&record=".$emailBean->id.'&email_template_id=acd0d03e-e494-d298-79ce-5a057236fb84'.'&sms_template_id='.$smsTemplateID."'>Edit Email Link</a><br/>";
    $GEO_link = "<a href='https://geocreation.com.au/assignments/".$invoice->stc_aggregator_serial_c."/edit'>GEO Link</a><br/>";
    $emailBean->description_html = $email_edit_link.$GEO_link.$emailBean->description_html;
    //VUT - Subject email GEO "PureElectric Geo Admin STCs/VEECs Client Approval - contact_fullname + city + state + geo number"
        if ($isSTC == true && $isVEEC == false) {
            $contact = new Contact();
            $contact_id = $invoice->billing_contact_id; 
            $contact = $contact->retrieve($contact_id);
            $emailBean->name = $emailBean->name.' - '.$contact->first_name.' '.$contact->last_name.' '.$contact->primary_address_city.' '.$contact->primary_address_state.' '.$invoice->stc_aggregator_serial_c; 
        }    
    //VUT-end
    $emailToSend = clone $emailBean;
    $emailToSend->mailbox_id = "5d586830-8938-efb6-c4a3-5b222cc28889";
    $emailToSend->to_addrs_arr = array(array("email"=>"info@pure-electric.com.au"));

    if ( $emailToSend->send()) {
        $emailBean->status = 'sent';
        $emailBean->description_html = preg_replace("/<a href=[^>]+Edit Email Link</a><br/>", "", $emailBean->description_html);
         // $emailBean->description_html = preg_replace("/&lt;div dir="ltr">PureElectric Accounts class="CToWUd"></a></div></div></div>/", "", $emailBean->description_html);
        $emailBean->to_addrs = $account->name . "  <".$primary.">";
        $emailBean->description_html =$description_html_save;
        $emailBean->save();

        if($email_type == 'owner'){
            $invoice->send_geo_email_status_c = 'sent';
            $dateAUS = date('Y-m-d H:i:s', time());
            $invoice->geo_email_sent_date_c = $dateAUS;
            $invoice->save();
        }
    }
}

function config_sendGeoEmail_type_is_installer($invoice_id,$email_type){
    $account_id = '';
    $product_type = '';
    $from_address = '';
    $db  = DBManagerFactory::getInstance();


    $invoice = new AOS_Invoices();
    $invoice->retrieve($invoice_id);

    if(!isset($invoice->id) || $invoice->id == "") {
        return;
    }


    $from_address = "PureElectric Accounts - PureElectric &lt;accounts@pure-electric.com.au&gt;";

    $account = new Account();
    if($account_id == "") {
        $account_id = $invoice->billing_account_id;
    }
    $account = $account->retrieve($account_id);

    $installer = new Account();
    $installer_id = $invoice->account_id1_c;
    if($installer_id == ''){
        $installer_id = $invoice->account_id_c;
    }
    $installer = $installer->retrieve($installer_id);
    
    //thienpb get product name and compare

    $sql = "SELECT aos_products_quotes.name FROM aos_products_quotes WHERE parent_type = 'AOS_Invoices' AND parent_id = '".$invoice->id."' AND deleted = 0";
    $result = $db->query($sql);

    $isSTC = false;
    $isVEEC = false;
    $geo_name = '';
    while($row = $db->fetchByAssoc($result)){
        if(strpos($row['name'],'STC') !== false){
            $isSTC = true;
        }
        if(strpos($row['name'],'VEEC') !== false){
            $isVEEC = true;
        }
    }

    if($isSTC == true && $isVEEC == true){
        $geo_name = "STCs/VEECs";
    }else if($isSTC){
        $geo_name = "STCs";
    }else if($isVEEC){
        $geo_name = "VEECs";
    }else{
        $geo_name ='';
    }
    //end
    $sea = new SugarEmailAddress; 
    // Grab the primary address for the given record represented by the $bean object
    $primary = $sea->getPrimaryAddress($installer);

    //thien fix
    $query_groupname = "SELECT aos_line_item_groups.name FROM aos_line_item_groups WHERE parent_id = '".$invoice_id."' AND deleted = 0 LIMIT 1";
    $ret_groupname = $db->query($query_groupname);
    if($ret_groupname->num_rows >0){
        $row_groupname = $db->fetchByAssoc($ret_groupname);
        $productType = strtolower($row_groupname['name']);
        
        if(strpos($productType,'sanden') !== false){
            $product_type = 'Sanden';
        }else if(strpos($productType,'daikin') !==false){
            $product_type = 'Daikin';
        }else{
            $product_type = '';
        }
    }
    if($invoice->installation_date_c != '') {
        $dateInfos = explode(" ",$invoice->installation_date_c);
        $dateInfos = explode("/",$dateInfos[0]);
        $inv_install_date_str = "$dateInfos[1]/$dateInfos[2]";
    }
    $request = array(
        "module" => "Emails",
        "action" => "send",
        "record" => "",
        "type" => "out",
        "send" => 1,
        "inbound_email_id" => ($invoice->assigned_user_id == "8d159972-b7ea-8cf9-c9d2-56958d05485e") ? "8dab4c79-32d8-0a26-f471-59f1c4e037cf" : "58cceed9-3dd3-d0b5-43b2-59f1c80e3869",
        "emails_email_templates_name" => "INSTALLER GEO STC/VEEC EMAIL FOLLOW UP",
        "emails_email_templates_idb" => "6b4a9555-3fad-266b-095f-5f69a004a7a9",
        "parent_type" => "Accounts",
        "parent_name" => $installer->name,
        "parent_id" => $installer->id,
        "from_addr" => $from_address,
        "to_addrs_names" => $installer->name . "  <".$primary.">",//"binhdigipro@gmail.com",//$lead->email1,
        "cc_addrs_names" => "info@pure-electric.com.au",
        "bcc_addrs_names" => "binh.nguyen@pure-electric.com.au, paul.szuster@pure-electric.com.au, matthew.wright@pure-electric.com.au",
        "is_only_plain_text" => false,
        "aos_invoices_name" => $invoice->name,
        "client_name"=> current(explode(' ',$account->name)),
        'installer_first_name' => current(explode(' ',$installer->name)),
        "geo_name" => $geo_name,
        "intallation_address" => $invoice->install_address_c .' '.$invoice->install_address_city_c. ' '.$invoice->install_address_state_c .' '.$invoice->install_address_postalcode_c, 
        "productType" => $product_type,
        "install_date" => ($inv_install_date_str)?$inv_install_date_str: ''
    );
        /**
     * @var EmailTemplate $emailTemplate
     */
    $emailTemplate = BeanFactory::getBean(
        'EmailTemplates',
        '965f4158-7b03-c91f-6f68-5f69b005cc36'
    );
    $emailTemplate->subject = str_replace("STCs/VEECs",$request['geo_name'],$emailTemplate->subject);
    $emailTemplate->subject = str_replace("\$productType",$request['productType'],$emailTemplate->subject);
    $emailTemplate->subject = str_replace("\$aos_invoices_name",$request['aos_invoices_name'],$emailTemplate->subject);
    $emailTemplate->subject = str_replace("\$client_name",$request['lead_first_name'],$emailTemplate->subject);
    $emailTemplate->subject = str_replace("\$install_date",$request['install_date'],$emailTemplate->subject);

    $emailTemplate->body = str_replace("STCs/VEECs",$request['geo_name'],$emailTemplate->body);
    $emailTemplate->body_html = str_replace("STCs/VEECs",$request['geo_name'],$emailTemplate->body_html);
    $emailTemplate->body = str_replace("\$installer_first_name", $request['installer_first_name'] , $emailTemplate->body);
    $emailTemplate->body_html = str_replace("\$installer_first_name", $request['installer_first_name'] , $emailTemplate->body_html);
    $emailTemplate->body = str_replace("\$intallation_address", $request['intallation_address'] , $emailTemplate->body);
    $emailTemplate->body_html = str_replace("\$intallation_address", $request['intallation_address'] , $emailTemplate->body_html);
    $emailTemplate->body = str_replace("\$client_name", $request['client_name'] , $emailTemplate->body);
    $emailTemplate->body_html = str_replace("\$client_name", $request['client_name'] , $emailTemplate->body_html);
    // parse and replace bean variables

    $emailBean = new Email();
    $emailBean->name = $emailTemplate->subject;
    $emailBean->description_html = $emailTemplate->body_html;
    $emailBean->description = $emailTemplate->body;


    $inboundEmailAccount = new InboundEmail();
    $inboundEmailAccount->retrieve($temp_request['inbound_email_id']);
    
    $emailBean->mailbox_id = "5d586830-8938-efb6-c4a3-5b222cc28889";// Account email;



    // Signature
    $matthew_id = "8d159972-b7ea-8cf9-c9d2-56958d05485e";
    $paul_id = "61e04d4b-86ef-00f2-c669-579eb1bb58fa";
    
    if($invoice->assigned_user_id != ''){
        $current_user = new User();
        $invoice->retrieve($invoice->assigned_user_id);
        
    }else{
        $current_user->sms_signature_c = '';
    }

    $smsTemplateID = '5fcde64f-63ac-dc94-21fb-5e5ef5cf4c70';
    $smsTemplate = BeanFactory::getBean(
        'pe_smstemplate',
        $smsTemplateID
    );
    
   
    $sms_body =  $smsTemplate->body_c;
    $sms_body = str_replace("\$first_name", current(explode(' ',$installer->name)), $sms_body);
    $phone_number = preg_replace("/^0/", "+61", preg_replace('/\D/', '', $installer->mobile_phone_c));
    $phone_number = preg_replace("/^61/", "+61", $phone_number);
    $emailBean->number_client = $phone_number;
    $emailBean->sms_message = strip_tags(trim(html_entity_decode($sms_body.$current_user->sms_signature_c,ENT_QUOTES)));

    $emailBean->save();
    $description_html_save = $emailBean->description_html;
    $email_edit_link = "<a href='https://suitecrm.pure-electric.com.au/index.php?action=ComposeViewWithPdfTemplate&module=Emails&return_module=AOS_Invoices&return_action=DetailView&return_action=DetailView&record=".$emailBean->id.'&email_template_id=acd0d03e-e494-d298-79ce-5a057236fb84'.'&sms_template_id='.$smsTemplateID."'>Edit Email Link</a><br/>";
    $GEO_link = "<a href='https://geocreation.com.au/assignments/".$invoice->stc_aggregator_serial_c."/edit'>GEO Link</a><br/>";
    $emailBean->description_html = $email_edit_link.$GEO_link.$emailBean->description_html;
    $emailToSend = clone $emailBean;
    $emailToSend->mailbox_id = "5d586830-8938-efb6-c4a3-5b222cc28889";
    $emailToSend->to_addrs_arr = array(array("email"=>"info@pure-electric.com.au"));

    if ( $emailToSend->send()) {
        $emailBean->status = 'sent';
        $emailBean->to_addrs = $installer->name . "  <".$primary.">";
        $emailBean->description_html =$description_html_save;
        $emailBean->save();
    }
}